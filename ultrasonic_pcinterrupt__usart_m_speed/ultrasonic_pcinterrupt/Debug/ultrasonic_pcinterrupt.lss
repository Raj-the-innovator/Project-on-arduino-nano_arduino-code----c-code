
ultrasonic_pcinterrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  00000fc8  0000105c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fc8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  0080012e  0080012e  0000108a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000108a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000010bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  000010f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001552  00000000  00000000  00001248  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c58  00000000  00000000  0000279a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ac5  00000000  00000000  000033f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c0  00000000  00000000  00003eb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000593  00000000  00000000  00004178  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000064b  00000000  00000000  0000470b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00004d56  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  14:	0c 94 f2 01 	jmp	0x3e4	; 0x3e4 <__vector_5>
  18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  34:	0c 94 26 03 	jmp	0x64c	; 0x64c <__vector_13>
  38:	0c 94 ed 02 	jmp	0x5da	; 0x5da <__vector_14>
  3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__mulsf3+0x8>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <usart_init+0x14>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <pinchange_int+0xa>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <lcd_command+0x2e>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	e8 ec       	ldi	r30, 0xC8	; 200
 176:	ff e0       	ldi	r31, 0x0F	; 15
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	ae 32       	cpi	r26, 0x2E	; 46
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
 184:	21 e0       	ldi	r18, 0x01	; 1
 186:	ae e2       	ldi	r26, 0x2E	; 46
 188:	b1 e0       	ldi	r27, 0x01	; 1
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	a9 34       	cpi	r26, 0x49	; 73
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	0e 94 51 01 	call	0x2a2	; 0x2a2 <main>
 198:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <_exit>

0000019c <__bad_interrupt>:
 19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <lcd_command>:
#define en (1<<1)  //en is set to pin no 1 
#define data_bus PORTD //portd pin 2,3,4,5 as 4 bit is outputed to lcd data bus 4 pins 

void lcd_command(unsigned char command)
{
	data_bus=(data_bus & 0x0F) | (command & 0xF0); //higher order nibble command is put on port d to lcd bus
 1a0:	9b b1       	in	r25, 0x0b	; 11
 1a2:	9f 70       	andi	r25, 0x0F	; 15
 1a4:	28 2f       	mov	r18, r24
 1a6:	20 7f       	andi	r18, 0xF0	; 240
 1a8:	92 2b       	or	r25, r18
 1aa:	9b b9       	out	0x0b, r25	; 11
	PORTB &= ~(rs); //command register is selected
 1ac:	28 98       	cbi	0x05, 0	; 5
	PORTB |= en;  // high to low transition for falling edge triger lcd
 1ae:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b0:	35 ed       	ldi	r19, 0xD5	; 213
 1b2:	3a 95       	dec	r19
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <lcd_command+0x12>
 1b6:	00 00       	nop
	_delay_us(40); //refresh time
	PORTB &= ~(en);
 1b8:	29 98       	cbi	0x05, 1	; 5
 1ba:	ef e1       	ldi	r30, 0x1F	; 31
 1bc:	f3 e0       	ldi	r31, 0x03	; 3
 1be:	31 97       	sbiw	r30, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <lcd_command+0x1e>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <lcd_command+0x24>
 1c4:	00 00       	nop
	_delay_us(200);
	data_bus=(data_bus & 0x0F) | (command << 4); //lower order nibble command is put on port d to lcd bus
 1c6:	2b b1       	in	r18, 0x0b	; 11
 1c8:	2f 70       	andi	r18, 0x0F	; 15
 1ca:	f0 e1       	ldi	r31, 0x10	; 16
 1cc:	8f 9f       	mul	r24, r31
 1ce:	c0 01       	movw	r24, r0
 1d0:	11 24       	eor	r1, r1
 1d2:	82 2b       	or	r24, r18
 1d4:	8b b9       	out	0x0b, r24	; 11
	PORTB &= ~(rs); //command register is selected
 1d6:	28 98       	cbi	0x05, 0	; 5
	PORTB |= en;  // high to low transition for falling edge triger lcd
 1d8:	29 9a       	sbi	0x05, 1	; 5
 1da:	35 ed       	ldi	r19, 0xD5	; 213
 1dc:	3a 95       	dec	r19
 1de:	f1 f7       	brne	.-4      	; 0x1dc <lcd_command+0x3c>
 1e0:	00 00       	nop
	_delay_us(40); //refresh time
	PORTB &= ~(en);
 1e2:	29 98       	cbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e4:	8f e3       	ldi	r24, 0x3F	; 63
 1e6:	9f e1       	ldi	r25, 0x1F	; 31
 1e8:	01 97       	sbiw	r24, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <lcd_command+0x48>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <lcd_command+0x4e>
 1ee:	00 00       	nop
 1f0:	08 95       	ret

000001f2 <lcd_data>:
	
}

void lcd_data(unsigned char data)
{
	data_bus=(data_bus & 0x0F) | (data & 0xF0); //higher order nibble data is put on port d to lcd bus
 1f2:	9b b1       	in	r25, 0x0b	; 11
 1f4:	9f 70       	andi	r25, 0x0F	; 15
 1f6:	28 2f       	mov	r18, r24
 1f8:	20 7f       	andi	r18, 0xF0	; 240
 1fa:	92 2b       	or	r25, r18
 1fc:	9b b9       	out	0x0b, r25	; 11
	PORTB |= rs;  // data register is selected
 1fe:	28 9a       	sbi	0x05, 0	; 5
	PORTB |= en; // high to low transition for falling edge triger lcd
 200:	29 9a       	sbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 202:	35 ed       	ldi	r19, 0xD5	; 213
 204:	3a 95       	dec	r19
 206:	f1 f7       	brne	.-4      	; 0x204 <lcd_data+0x12>
 208:	00 00       	nop
	_delay_us(40); //refresh time
	PORTB &= ~(en);
 20a:	29 98       	cbi	0x05, 1	; 5
 20c:	ef e1       	ldi	r30, 0x1F	; 31
 20e:	f3 e0       	ldi	r31, 0x03	; 3
 210:	31 97       	sbiw	r30, 0x01	; 1
 212:	f1 f7       	brne	.-4      	; 0x210 <lcd_data+0x1e>
 214:	00 c0       	rjmp	.+0      	; 0x216 <lcd_data+0x24>
 216:	00 00       	nop
	_delay_us(200);
	data_bus=(data_bus & 0x0F) | (data << 4); //lower order nibble data is put on port d to lcd bus
 218:	2b b1       	in	r18, 0x0b	; 11
 21a:	2f 70       	andi	r18, 0x0F	; 15
 21c:	f0 e1       	ldi	r31, 0x10	; 16
 21e:	8f 9f       	mul	r24, r31
 220:	c0 01       	movw	r24, r0
 222:	11 24       	eor	r1, r1
 224:	82 2b       	or	r24, r18
 226:	8b b9       	out	0x0b, r24	; 11
	PORTB |= rs;  // data register is selected
 228:	28 9a       	sbi	0x05, 0	; 5
	PORTB |= en; // high to low transition for falling edge triger lcd
 22a:	29 9a       	sbi	0x05, 1	; 5
 22c:	35 ed       	ldi	r19, 0xD5	; 213
 22e:	3a 95       	dec	r19
 230:	f1 f7       	brne	.-4      	; 0x22e <lcd_data+0x3c>
 232:	00 00       	nop
	_delay_us(40); //refresh time
	PORTB &= ~(en);
 234:	29 98       	cbi	0x05, 1	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 236:	8f e3       	ldi	r24, 0x3F	; 63
 238:	9f e1       	ldi	r25, 0x1F	; 31
 23a:	01 97       	sbiw	r24, 0x01	; 1
 23c:	f1 f7       	brne	.-4      	; 0x23a <lcd_data+0x48>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <lcd_data+0x4e>
 240:	00 00       	nop
 242:	08 95       	ret

00000244 <SendString>:
	_delay_ms(2);
}

void SendString(char *str)
{
 244:	0f 93       	push	r16
 246:	1f 93       	push	r17
 248:	cf 93       	push	r28
 24a:	fc 01       	movw	r30, r24
	unsigned char i=0; //i is declare as char for pointer
	while(str[i]!='\0') // checking for null char
 24c:	80 81       	ld	r24, Z
 24e:	88 23       	and	r24, r24
 250:	59 f0       	breq	.+22     	; 0x268 <SendString+0x24>
 252:	8f 01       	movw	r16, r30
 254:	c0 e0       	ldi	r28, 0x00	; 0
	{
		lcd_data(str[i]); // print that char on lcd
 256:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <lcd_data>
		i++; //incrementing i to next char
 25a:	cf 5f       	subi	r28, 0xFF	; 255
}

void SendString(char *str)
{
	unsigned char i=0; //i is declare as char for pointer
	while(str[i]!='\0') // checking for null char
 25c:	f8 01       	movw	r30, r16
 25e:	ec 0f       	add	r30, r28
 260:	f1 1d       	adc	r31, r1
 262:	80 81       	ld	r24, Z
 264:	81 11       	cpse	r24, r1
 266:	f7 cf       	rjmp	.-18     	; 0x256 <SendString+0x12>
	{
		lcd_data(str[i]); // print that char on lcd
		i++; //incrementing i to next char
	}
}
 268:	cf 91       	pop	r28
 26a:	1f 91       	pop	r17
 26c:	0f 91       	pop	r16
 26e:	08 95       	ret

00000270 <lcd_init>:

void lcd_init(void)
{
DDRD |= (1<<4) | (1<<5) | (1<<6) | (1<<7); // Port d 4 pin (d4,5,6,7)is set as output
 270:	8a b1       	in	r24, 0x0a	; 10
 272:	80 6f       	ori	r24, 0xF0	; 240
 274:	8a b9       	out	0x0a, r24	; 10
PORTD &= ~(1<<4) | ~(1<<5) | ~(1<<6) | ~(1<<7); // port d is set to 0; 
 276:	8b b1       	in	r24, 0x0b	; 11
 278:	8b b9       	out	0x0b, r24	; 11
DDRB |= rs; // rs pin is set as ouput 
 27a:	20 9a       	sbi	0x04, 0	; 4
PORTB &= ~(rs); // rs pin is pull up transistor is on 
 27c:	28 98       	cbi	0x05, 0	; 5
DDRB |= en; //en pin is set as ouput
 27e:	21 9a       	sbi	0x04, 1	; 4
PORTB &= ~(en); //en pin is pull up transistor is on
 280:	29 98       	cbi	0x05, 1	; 5

// lcd initailzation command

lcd_command(0x02);  // lcd in 4 bit interfacing
 282:	82 e0       	ldi	r24, 0x02	; 2
 284:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_command>
lcd_command(0x28); // lcd is initialze 8 bit mode and 16*2 rows and column
 288:	88 e2       	ldi	r24, 0x28	; 40
 28a:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_command>
lcd_command(0x0C);  // set display for ouput 16*2
 28e:	8c e0       	ldi	r24, 0x0C	; 12
 290:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_command>
lcd_command(0x01); // clear the screen
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_command>
lcd_command(0x80);  // 1 line cursor display
 29a:	80 e8       	ldi	r24, 0x80	; 128
 29c:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_command>
 2a0:	08 95       	ret

000002a2 <main>:
volatile double distance[2],difference,time1;
volatile char final_distance[6];

int main(void)
{  
   ultrasonic_init(); // ultrasonic setup
 2a2:	0e 94 3b 03 	call	0x676	; 0x676 <ultrasonic_init>
   pinchange_int();  // pin change interrupt setup
 2a6:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <pinchange_int>
   usart_init();
 2aa:	0e 94 4d 03 	call	0x69a	; 0x69a <usart_init>
   lcd_init(); //lcd is initialize
 2ae:	0e 94 38 01 	call	0x270	; 0x270 <lcd_init>
   SendString(" speed m/s - RJ");
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	91 e0       	ldi	r25, 0x01	; 1
 2b6:	0e 94 22 01 	call	0x244	; 0x244 <SendString>
   usart_putstring("speed m/s by RJ");
 2ba:	80 e1       	ldi	r24, 0x10	; 16
 2bc:	91 e0       	ldi	r25, 0x01	; 1
 2be:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
   timer0_init();
 2c2:	0e 94 dd 02 	call	0x5ba	; 0x5ba <timer0_init>
       lcd_command(0xC0);
       SendString("speed:");
       dtostrf(difference,2,1,final_distance);
       SendString(final_distance);
       SendString("m/s  ");
       dtostrf(distance[0],2,2,final_distance);
 2c6:	ce e2       	ldi	r28, 0x2E	; 46
 2c8:	d1 e0       	ldi	r29, 0x01	; 1
   SendString(" speed m/s - RJ");
   usart_putstring("speed m/s by RJ");
   timer0_init();
   while(1)
   {     
       lcd_command(0xC0);
 2ca:	80 ec       	ldi	r24, 0xC0	; 192
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_command>
       SendString("speed:");
 2d2:	80 e2       	ldi	r24, 0x20	; 32
 2d4:	91 e0       	ldi	r25, 0x01	; 1
 2d6:	0e 94 22 01 	call	0x244	; 0x244 <SendString>
       dtostrf(difference,2,1,final_distance);
 2da:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <difference>
 2de:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <difference+0x1>
 2e2:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <difference+0x2>
 2e6:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <difference+0x3>
 2ea:	06 e3       	ldi	r16, 0x36	; 54
 2ec:	11 e0       	ldi	r17, 0x01	; 1
 2ee:	21 e0       	ldi	r18, 0x01	; 1
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	42 e0       	ldi	r20, 0x02	; 2
 2f4:	50 e0       	ldi	r21, 0x00	; 0
 2f6:	0e 94 59 05 	call	0xab2	; 0xab2 <dtostrf>
       SendString(final_distance);
 2fa:	c8 01       	movw	r24, r16
 2fc:	0e 94 22 01 	call	0x244	; 0x244 <SendString>
       SendString("m/s  ");
 300:	87 e2       	ldi	r24, 0x27	; 39
 302:	91 e0       	ldi	r25, 0x01	; 1
 304:	0e 94 22 01 	call	0x244	; 0x244 <SendString>
       dtostrf(distance[0],2,2,final_distance);
 308:	68 81       	ld	r22, Y
 30a:	79 81       	ldd	r23, Y+1	; 0x01
 30c:	8a 81       	ldd	r24, Y+2	; 0x02
 30e:	9b 81       	ldd	r25, Y+3	; 0x03
 310:	22 e0       	ldi	r18, 0x02	; 2
 312:	30 e0       	ldi	r19, 0x00	; 0
 314:	42 e0       	ldi	r20, 0x02	; 2
 316:	50 e0       	ldi	r21, 0x00	; 0
 318:	0e 94 59 05 	call	0xab2	; 0xab2 <dtostrf>
       usart_putstring(final_distance);
 31c:	c8 01       	movw	r24, r16
 31e:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
       usart_putstring("  ");
 322:	8a e2       	ldi	r24, 0x2A	; 42
 324:	91 e0       	ldi	r25, 0x01	; 1
 326:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
       dtostrf(distance[1],2,2,final_distance);
 32a:	6c 81       	ldd	r22, Y+4	; 0x04
 32c:	7d 81       	ldd	r23, Y+5	; 0x05
 32e:	8e 81       	ldd	r24, Y+6	; 0x06
 330:	9f 81       	ldd	r25, Y+7	; 0x07
 332:	22 e0       	ldi	r18, 0x02	; 2
 334:	30 e0       	ldi	r19, 0x00	; 0
 336:	42 e0       	ldi	r20, 0x02	; 2
 338:	50 e0       	ldi	r21, 0x00	; 0
 33a:	0e 94 59 05 	call	0xab2	; 0xab2 <dtostrf>
       usart_putstring(final_distance);
 33e:	c8 01       	movw	r24, r16
 340:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
       usart_putstring("  ");
 344:	8a e2       	ldi	r24, 0x2A	; 42
 346:	91 e0       	ldi	r25, 0x01	; 1
 348:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
       dtostrf(distance[2],2,2,final_distance);
 34c:	68 85       	ldd	r22, Y+8	; 0x08
 34e:	79 85       	ldd	r23, Y+9	; 0x09
 350:	8a 85       	ldd	r24, Y+10	; 0x0a
 352:	9b 85       	ldd	r25, Y+11	; 0x0b
 354:	22 e0       	ldi	r18, 0x02	; 2
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	42 e0       	ldi	r20, 0x02	; 2
 35a:	50 e0       	ldi	r21, 0x00	; 0
 35c:	0e 94 59 05 	call	0xab2	; 0xab2 <dtostrf>
       usart_putstring(final_distance);
 360:	c8 01       	movw	r24, r16
 362:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
       usart_putstring("  ");
 366:	8a e2       	ldi	r24, 0x2A	; 42
 368:	91 e0       	ldi	r25, 0x01	; 1
 36a:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
       dtostrf(time1,2,2,final_distance);
 36e:	60 91 40 01 	lds	r22, 0x0140	; 0x800140 <time1>
 372:	70 91 41 01 	lds	r23, 0x0141	; 0x800141 <time1+0x1>
 376:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <time1+0x2>
 37a:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <time1+0x3>
 37e:	22 e0       	ldi	r18, 0x02	; 2
 380:	30 e0       	ldi	r19, 0x00	; 0
 382:	42 e0       	ldi	r20, 0x02	; 2
 384:	50 e0       	ldi	r21, 0x00	; 0
 386:	0e 94 59 05 	call	0xab2	; 0xab2 <dtostrf>
       usart_putstring(final_distance);
 38a:	c8 01       	movw	r24, r16
 38c:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
       usart_putstring("  ");
 390:	8a e2       	ldi	r24, 0x2A	; 42
 392:	91 e0       	ldi	r25, 0x01	; 1
 394:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
       dtostrf(difference,2,2,final_distance);
 398:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <difference>
 39c:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <difference+0x1>
 3a0:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <difference+0x2>
 3a4:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <difference+0x3>
 3a8:	22 e0       	ldi	r18, 0x02	; 2
 3aa:	30 e0       	ldi	r19, 0x00	; 0
 3ac:	42 e0       	ldi	r20, 0x02	; 2
 3ae:	50 e0       	ldi	r21, 0x00	; 0
 3b0:	0e 94 59 05 	call	0xab2	; 0xab2 <dtostrf>
       usart_putstring(final_distance);
 3b4:	c8 01       	movw	r24, r16
 3b6:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
       usart_putstring("  "); 
 3ba:	8a e2       	ldi	r24, 0x2A	; 42
 3bc:	91 e0       	ldi	r25, 0x01	; 1
 3be:	0e 94 61 03 	call	0x6c2	; 0x6c2 <usart_putstring>
 3c2:	2f ef       	ldi	r18, 0xFF	; 255
 3c4:	83 ec       	ldi	r24, 0xC3	; 195
 3c6:	99 e0       	ldi	r25, 0x09	; 9
 3c8:	21 50       	subi	r18, 0x01	; 1
 3ca:	80 40       	sbci	r24, 0x00	; 0
 3cc:	90 40       	sbci	r25, 0x00	; 0
 3ce:	e1 f7       	brne	.-8      	; 0x3c8 <main+0x126>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <main+0x130>
 3d2:	00 00       	nop
 3d4:	7a cf       	rjmp	.-268    	; 0x2ca <main+0x28>

000003d6 <pinchange_int>:
volatile char count;
volatile unsigned int timer_overflow,timer_overflow1; 

void pinchange_int(void)
{
	PCICR = (1<<PCIE2); //pin change interrupt is initialze at 6 pin
 3d6:	84 e0       	ldi	r24, 0x04	; 4
 3d8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
	PCMSK2 = (1<<PCINT18); // pin 6 pin change interrupt is enable 
 3dc:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
	sei(); // global interrupt enable
 3e0:	78 94       	sei
 3e2:	08 95       	ret

000003e4 <__vector_5>:
}

ISR (PCINT2_vect) // isr for pin change interrupt for echo pin
{ 
 3e4:	1f 92       	push	r1
 3e6:	0f 92       	push	r0
 3e8:	0f b6       	in	r0, 0x3f	; 63
 3ea:	0f 92       	push	r0
 3ec:	11 24       	eor	r1, r1
 3ee:	cf 92       	push	r12
 3f0:	df 92       	push	r13
 3f2:	ef 92       	push	r14
 3f4:	ff 92       	push	r15
 3f6:	0f 93       	push	r16
 3f8:	1f 93       	push	r17
 3fa:	2f 93       	push	r18
 3fc:	3f 93       	push	r19
 3fe:	4f 93       	push	r20
 400:	5f 93       	push	r21
 402:	6f 93       	push	r22
 404:	7f 93       	push	r23
 406:	8f 93       	push	r24
 408:	9f 93       	push	r25
 40a:	af 93       	push	r26
 40c:	bf 93       	push	r27
 40e:	cf 93       	push	r28
 410:	df 93       	push	r29
 412:	ef 93       	push	r30
 414:	ff 93       	push	r31
 if(PIND & (1<<2))// echo get high 
 416:	4a 9b       	sbis	0x09, 2	; 9
 418:	24 c0       	rjmp	.+72     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 {
	 timer1_off();
 41a:	0e 94 23 03 	call	0x646	; 0x646 <timer1_off>
	 time1 =(double) (TCNT1 + (timer_overflow * 65535)) * 0.0000000625;
 41e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 422:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 426:	20 91 45 01 	lds	r18, 0x0145	; 0x800145 <timer_overflow>
 42a:	30 91 46 01 	lds	r19, 0x0146	; 0x800146 <timer_overflow+0x1>
 42e:	af ef       	ldi	r26, 0xFF	; 255
 430:	bf ef       	ldi	r27, 0xFF	; 255
 432:	0e 94 4a 05 	call	0xa94	; 0xa94 <__umulhisi3>
 436:	64 0f       	add	r22, r20
 438:	75 1f       	adc	r23, r21
 43a:	81 1d       	adc	r24, r1
 43c:	91 1d       	adc	r25, r1
 43e:	0e 94 51 04 	call	0x8a2	; 0x8a2 <__floatsisf>
 442:	2d eb       	ldi	r18, 0xBD	; 189
 444:	37 e3       	ldi	r19, 0x37	; 55
 446:	46 e8       	ldi	r20, 0x86	; 134
 448:	53 e3       	ldi	r21, 0x33	; 51
 44a:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__mulsf3>
 44e:	60 93 40 01 	sts	0x0140, r22	; 0x800140 <time1>
 452:	70 93 41 01 	sts	0x0141, r23	; 0x800141 <time1+0x1>
 456:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <time1+0x2>
 45a:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <time1+0x3>
     timer1_init();
 45e:	0e 94 12 03 	call	0x624	; 0x624 <timer1_init>
 }

   if(!(PIND & (1<<2)))// echo get low for calculation
 462:	4a 99       	sbic	0x09, 2	; 9
 464:	91 c0       	rjmp	.+290    	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
  {
	 timer1_off();
 466:	0e 94 23 03 	call	0x646	; 0x646 <timer1_off>
	 timer0_off();
 46a:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <timer0_off>
	 distance[count] = (double)(TCNT1 + (timer_overflow * 65535)) * 0.00001071875; // http://www.electronicwings.com/avr-atmega/ultrasonic-module-hc-sr04-interfacing-with-atmega1632
 46e:	c0 91 44 01 	lds	r28, 0x0144	; 0x800144 <count>
 472:	d0 e0       	ldi	r29, 0x00	; 0
 474:	04 e8       	ldi	r16, 0x84	; 132
 476:	10 e0       	ldi	r17, 0x00	; 0
 478:	f8 01       	movw	r30, r16
 47a:	40 81       	ld	r20, Z
 47c:	51 81       	ldd	r21, Z+1	; 0x01
 47e:	20 91 45 01 	lds	r18, 0x0145	; 0x800145 <timer_overflow>
 482:	30 91 46 01 	lds	r19, 0x0146	; 0x800146 <timer_overflow+0x1>
 486:	af ef       	ldi	r26, 0xFF	; 255
 488:	bf ef       	ldi	r27, 0xFF	; 255
 48a:	0e 94 4a 05 	call	0xa94	; 0xa94 <__umulhisi3>
 48e:	64 0f       	add	r22, r20
 490:	75 1f       	adc	r23, r21
 492:	81 1d       	adc	r24, r1
 494:	91 1d       	adc	r25, r1
 496:	0e 94 51 04 	call	0x8a2	; 0x8a2 <__floatsisf>
 49a:	2e ea       	ldi	r18, 0xAE	; 174
 49c:	34 ed       	ldi	r19, 0xD4	; 212
 49e:	43 e3       	ldi	r20, 0x33	; 51
 4a0:	57 e3       	ldi	r21, 0x37	; 55
 4a2:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__mulsf3>
 4a6:	cc 0f       	add	r28, r28
 4a8:	dd 1f       	adc	r29, r29
 4aa:	cc 0f       	add	r28, r28
 4ac:	dd 1f       	adc	r29, r29
 4ae:	c2 5d       	subi	r28, 0xD2	; 210
 4b0:	de 4f       	sbci	r29, 0xFE	; 254
 4b2:	68 83       	st	Y, r22
 4b4:	79 83       	std	Y+1, r23	; 0x01
 4b6:	8a 83       	std	Y+2, r24	; 0x02
 4b8:	9b 83       	std	Y+3, r25	; 0x03
	 time1 += (double) (TCNT1 + (timer_overflow * 65535)) * 0.0000000625;
 4ba:	f8 01       	movw	r30, r16
 4bc:	40 81       	ld	r20, Z
 4be:	51 81       	ldd	r21, Z+1	; 0x01
 4c0:	20 91 45 01 	lds	r18, 0x0145	; 0x800145 <timer_overflow>
 4c4:	30 91 46 01 	lds	r19, 0x0146	; 0x800146 <timer_overflow+0x1>
 4c8:	c0 90 40 01 	lds	r12, 0x0140	; 0x800140 <time1>
 4cc:	d0 90 41 01 	lds	r13, 0x0141	; 0x800141 <time1+0x1>
 4d0:	e0 90 42 01 	lds	r14, 0x0142	; 0x800142 <time1+0x2>
 4d4:	f0 90 43 01 	lds	r15, 0x0143	; 0x800143 <time1+0x3>
 4d8:	af ef       	ldi	r26, 0xFF	; 255
 4da:	bf ef       	ldi	r27, 0xFF	; 255
 4dc:	0e 94 4a 05 	call	0xa94	; 0xa94 <__umulhisi3>
 4e0:	64 0f       	add	r22, r20
 4e2:	75 1f       	adc	r23, r21
 4e4:	81 1d       	adc	r24, r1
 4e6:	91 1d       	adc	r25, r1
 4e8:	0e 94 51 04 	call	0x8a2	; 0x8a2 <__floatsisf>
 4ec:	2d eb       	ldi	r18, 0xBD	; 189
 4ee:	37 e3       	ldi	r19, 0x37	; 55
 4f0:	46 e8       	ldi	r20, 0x86	; 134
 4f2:	53 e3       	ldi	r21, 0x33	; 51
 4f4:	0e 94 dd 04 	call	0x9ba	; 0x9ba <__mulsf3>
 4f8:	a7 01       	movw	r20, r14
 4fa:	96 01       	movw	r18, r12
 4fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__addsf3>
 500:	60 93 40 01 	sts	0x0140, r22	; 0x800140 <time1>
 504:	70 93 41 01 	sts	0x0141, r23	; 0x800141 <time1+0x1>
 508:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <time1+0x2>
 50c:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <time1+0x3>
	 if(!count)
 510:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <count>
 514:	81 11       	cpse	r24, r1
 516:	02 c0       	rjmp	.+4      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
	 {
		 timer1_init();
 518:	0e 94 12 03 	call	0x624	; 0x624 <timer1_init>
	 }
	 if(count)
 51c:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <count>
 520:	88 23       	and	r24, r24
 522:	01 f1       	breq	.+64     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
	 {
	 difference =(double) (distance[1] - distance[0]) / time1;  //  speed = distance /time formula to get speed
 524:	ee e2       	ldi	r30, 0x2E	; 46
 526:	f1 e0       	ldi	r31, 0x01	; 1
 528:	64 81       	ldd	r22, Z+4	; 0x04
 52a:	75 81       	ldd	r23, Z+5	; 0x05
 52c:	86 81       	ldd	r24, Z+6	; 0x06
 52e:	97 81       	ldd	r25, Z+7	; 0x07
 530:	20 81       	ld	r18, Z
 532:	31 81       	ldd	r19, Z+1	; 0x01
 534:	42 81       	ldd	r20, Z+2	; 0x02
 536:	53 81       	ldd	r21, Z+3	; 0x03
 538:	c0 90 40 01 	lds	r12, 0x0140	; 0x800140 <time1>
 53c:	d0 90 41 01 	lds	r13, 0x0141	; 0x800141 <time1+0x1>
 540:	e0 90 42 01 	lds	r14, 0x0142	; 0x800142 <time1+0x2>
 544:	f0 90 43 01 	lds	r15, 0x0143	; 0x800143 <time1+0x3>
 548:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__subsf3>
 54c:	a7 01       	movw	r20, r14
 54e:	96 01       	movw	r18, r12
 550:	0e 94 dd 03 	call	0x7ba	; 0x7ba <__divsf3>
 554:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <difference>
 558:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <difference+0x1>
 55c:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <difference+0x2>
 560:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <difference+0x3>
	 }
	 timer0_init();
 564:	0e 94 dd 02 	call	0x5ba	; 0x5ba <timer0_init>
	 sei();
 568:	78 94       	sei
	 count++;
 56a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <count>
 56e:	8f 5f       	subi	r24, 0xFF	; 255
 570:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <count>
	 if(count>=2)
 574:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <count>
 578:	82 30       	cpi	r24, 0x02	; 2
 57a:	10 f0       	brcs	.+4      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
	 {
		 count=0;
 57c:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <count>
	 }
	 timer_overflow=0;
 580:	10 92 46 01 	sts	0x0146, r1	; 0x800146 <timer_overflow+0x1>
 584:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <timer_overflow>
     }
 588:	ff 91       	pop	r31
 58a:	ef 91       	pop	r30
 58c:	df 91       	pop	r29
 58e:	cf 91       	pop	r28
 590:	bf 91       	pop	r27
 592:	af 91       	pop	r26
 594:	9f 91       	pop	r25
 596:	8f 91       	pop	r24
 598:	7f 91       	pop	r23
 59a:	6f 91       	pop	r22
 59c:	5f 91       	pop	r21
 59e:	4f 91       	pop	r20
 5a0:	3f 91       	pop	r19
 5a2:	2f 91       	pop	r18
 5a4:	1f 91       	pop	r17
 5a6:	0f 91       	pop	r16
 5a8:	ff 90       	pop	r15
 5aa:	ef 90       	pop	r14
 5ac:	df 90       	pop	r13
 5ae:	cf 90       	pop	r12
 5b0:	0f 90       	pop	r0
 5b2:	0f be       	out	0x3f, r0	; 63
 5b4:	0f 90       	pop	r0
 5b6:	1f 90       	pop	r1
 5b8:	18 95       	reti

000005ba <timer0_init>:
	sei(); // global interrupt enables
}

void timer0_reset(void)
{
	TCNT0=0; // count is set to 0
 5ba:	85 b5       	in	r24, 0x25	; 37
 5bc:	8d 60       	ori	r24, 0x0D	; 13
 5be:	85 bd       	out	0x25, r24	; 37
 5c0:	16 bc       	out	0x26, r1	; 38
 5c2:	ee e6       	ldi	r30, 0x6E	; 110
 5c4:	f0 e0       	ldi	r31, 0x00	; 0
 5c6:	80 81       	ld	r24, Z
 5c8:	82 60       	ori	r24, 0x02	; 2
 5ca:	80 83       	st	Z, r24
 5cc:	8a ef       	ldi	r24, 0xFA	; 250
 5ce:	87 bd       	out	0x27, r24	; 39
 5d0:	78 94       	sei
 5d2:	08 95       	ret

000005d4 <timer0_off>:
}

void timer0_off(void)
{
	TCNT0=0; // count is set to 0
 5d4:	16 bc       	out	0x26, r1	; 38
	TCCR0B=0;
 5d6:	15 bc       	out	0x25, r1	; 37
 5d8:	08 95       	ret

000005da <__vector_14>:
}

ISR (TIMER0_COMPA_vect)
{  
 5da:	1f 92       	push	r1
 5dc:	0f 92       	push	r0
 5de:	0f b6       	in	r0, 0x3f	; 63
 5e0:	0f 92       	push	r0
 5e2:	11 24       	eor	r1, r1
 5e4:	2f 93       	push	r18
 5e6:	3f 93       	push	r19
 5e8:	4f 93       	push	r20
 5ea:	5f 93       	push	r21
 5ec:	6f 93       	push	r22
 5ee:	7f 93       	push	r23
 5f0:	8f 93       	push	r24
 5f2:	9f 93       	push	r25
 5f4:	af 93       	push	r26
 5f6:	bf 93       	push	r27
 5f8:	ef 93       	push	r30
 5fa:	ff 93       	push	r31
	ultrasonic_trigger(); // trigger function is call
 5fc:	0e 94 40 03 	call	0x680	; 0x680 <ultrasonic_trigger>
	sei(); // global interrupt enables
}

void timer0_reset(void)
{
	TCNT0=0; // count is set to 0
 600:	16 bc       	out	0x26, r1	; 38

ISR (TIMER0_COMPA_vect)
{  
	ultrasonic_trigger(); // trigger function is call
    timer0_reset();  // count is set to 0
 602:	ff 91       	pop	r31
 604:	ef 91       	pop	r30
 606:	bf 91       	pop	r27
 608:	af 91       	pop	r26
 60a:	9f 91       	pop	r25
 60c:	8f 91       	pop	r24
 60e:	7f 91       	pop	r23
 610:	6f 91       	pop	r22
 612:	5f 91       	pop	r21
 614:	4f 91       	pop	r20
 616:	3f 91       	pop	r19
 618:	2f 91       	pop	r18
 61a:	0f 90       	pop	r0
 61c:	0f be       	out	0x3f, r0	; 63
 61e:	0f 90       	pop	r0
 620:	1f 90       	pop	r1
 622:	18 95       	reti

00000624 <timer1_init>:
	TCCR1B =0;
}

void timer1_reset(void)
{
	TCNT1=0; // count is set to 0
 624:	e1 e8       	ldi	r30, 0x81	; 129
 626:	f0 e0       	ldi	r31, 0x00	; 0
 628:	80 81       	ld	r24, Z
 62a:	81 60       	ori	r24, 0x01	; 1
 62c:	80 83       	st	Z, r24
 62e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 632:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 636:	ef e6       	ldi	r30, 0x6F	; 111
 638:	f0 e0       	ldi	r31, 0x00	; 0
 63a:	80 81       	ld	r24, Z
 63c:	81 60       	ori	r24, 0x01	; 1
 63e:	80 83       	st	Z, r24
 640:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <timer_overflow>
 644:	08 95       	ret

00000646 <timer1_off>:
 646:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 64a:	08 95       	ret

0000064c <__vector_13>:
}

ISR(TIMER1_OVF_vect)
{
 64c:	1f 92       	push	r1
 64e:	0f 92       	push	r0
 650:	0f b6       	in	r0, 0x3f	; 63
 652:	0f 92       	push	r0
 654:	11 24       	eor	r1, r1
 656:	8f 93       	push	r24
	timer_overflow++;
 658:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <timer_overflow>
 65c:	8f 5f       	subi	r24, 0xFF	; 255
 65e:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <timer_overflow>
	TCNT1=0;
 662:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 666:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 66a:	8f 91       	pop	r24
 66c:	0f 90       	pop	r0
 66e:	0f be       	out	0x3f, r0	; 63
 670:	0f 90       	pop	r0
 672:	1f 90       	pop	r1
 674:	18 95       	reti

00000676 <ultrasonic_init>:
#define trigger (1<<3) // trigger pin is set to pin 5
#define echo (1<<2) // echo pin is set to pin 6

void ultrasonic_init() 
{
	DDRD |= trigger;  // trigger is set as output
 676:	53 9a       	sbi	0x0a, 3	; 10
    PORTD &= ~(trigger); // trigger is set to 0
 678:	5b 98       	cbi	0x0b, 3	; 11
	DDRD	&= ~(echo);  // echo is set as input
 67a:	52 98       	cbi	0x0a, 2	; 10
	PORTD |= echo; // echo pin pullup transistor is activated
 67c:	5a 9a       	sbi	0x0b, 2	; 11
 67e:	08 95       	ret

00000680 <ultrasonic_trigger>:
}

void ultrasonic_trigger()
{
	sei(); // global interruptis enable
 680:	78 94       	sei
	PORTD &= ~(trigger); //trigger is set to  0
 682:	5b 98       	cbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 684:	8a e0       	ldi	r24, 0x0A	; 10
 686:	8a 95       	dec	r24
 688:	f1 f7       	brne	.-4      	; 0x686 <ultrasonic_trigger+0x6>
 68a:	00 c0       	rjmp	.+0      	; 0x68c <ultrasonic_trigger+0xc>
	_delay_us(2);
  PORTD |=trigger;
 68c:	5b 9a       	sbi	0x0b, 3	; 11
 68e:	85 e3       	ldi	r24, 0x35	; 53
 690:	8a 95       	dec	r24
 692:	f1 f7       	brne	.-4      	; 0x690 <ultrasonic_trigger+0x10>
 694:	00 00       	nop
  _delay_us(10);   // high to low signal of 10 us is given for trigger signal
  PORTD &= ~(trigger);
 696:	5b 98       	cbi	0x0b, 3	; 11
 698:	08 95       	ret

0000069a <usart_init>:
unsigned char usart_receive(void){
	
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
	
}
 69a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 69e:	87 e6       	ldi	r24, 0x67	; 103
 6a0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 6a4:	88 e1       	ldi	r24, 0x18	; 24
 6a6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 6aa:	86 e0       	ldi	r24, 0x06	; 6
 6ac:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 6b0:	08 95       	ret

000006b2 <usart_send>:

void usart_send( unsigned char data){
	
	while(!(UCSR0A & (1<<UDRE0)));
 6b2:	e0 ec       	ldi	r30, 0xC0	; 192
 6b4:	f0 e0       	ldi	r31, 0x00	; 0
 6b6:	90 81       	ld	r25, Z
 6b8:	95 ff       	sbrs	r25, 5
 6ba:	fd cf       	rjmp	.-6      	; 0x6b6 <usart_send+0x4>
	UDR0 = data;
 6bc:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 6c0:	08 95       	ret

000006c2 <usart_putstring>:
	
}

void usart_putstring(volatile char* StringPtr){
 6c2:	cf 93       	push	r28
 6c4:	df 93       	push	r29
 6c6:	ec 01       	movw	r28, r24
	
	while(*StringPtr != 0x00){
 6c8:	88 81       	ld	r24, Y
 6ca:	88 23       	and	r24, r24
 6cc:	31 f0       	breq	.+12     	; 0x6da <usart_putstring+0x18>
		usart_send(*StringPtr);
 6ce:	89 91       	ld	r24, Y+
 6d0:	0e 94 59 03 	call	0x6b2	; 0x6b2 <usart_send>
	
}

void usart_putstring(volatile char* StringPtr){
	
	while(*StringPtr != 0x00){
 6d4:	88 81       	ld	r24, Y
 6d6:	81 11       	cpse	r24, r1
 6d8:	fa cf       	rjmp	.-12     	; 0x6ce <usart_putstring+0xc>
		usart_send(*StringPtr);
	StringPtr++;}
	
 6da:	df 91       	pop	r29
 6dc:	cf 91       	pop	r28
 6de:	08 95       	ret

000006e0 <__subsf3>:
 6e0:	50 58       	subi	r21, 0x80	; 128

000006e2 <__addsf3>:
 6e2:	bb 27       	eor	r27, r27
 6e4:	aa 27       	eor	r26, r26
 6e6:	0e 94 88 03 	call	0x710	; 0x710 <__addsf3x>
 6ea:	0c 94 a3 04 	jmp	0x946	; 0x946 <__fp_round>
 6ee:	0e 94 95 04 	call	0x92a	; 0x92a <__fp_pscA>
 6f2:	38 f0       	brcs	.+14     	; 0x702 <__addsf3+0x20>
 6f4:	0e 94 9c 04 	call	0x938	; 0x938 <__fp_pscB>
 6f8:	20 f0       	brcs	.+8      	; 0x702 <__addsf3+0x20>
 6fa:	39 f4       	brne	.+14     	; 0x70a <__addsf3+0x28>
 6fc:	9f 3f       	cpi	r25, 0xFF	; 255
 6fe:	19 f4       	brne	.+6      	; 0x706 <__addsf3+0x24>
 700:	26 f4       	brtc	.+8      	; 0x70a <__addsf3+0x28>
 702:	0c 94 92 04 	jmp	0x924	; 0x924 <__fp_nan>
 706:	0e f4       	brtc	.+2      	; 0x70a <__addsf3+0x28>
 708:	e0 95       	com	r30
 70a:	e7 fb       	bst	r30, 7
 70c:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_inf>

00000710 <__addsf3x>:
 710:	e9 2f       	mov	r30, r25
 712:	0e 94 b4 04 	call	0x968	; 0x968 <__fp_split3>
 716:	58 f3       	brcs	.-42     	; 0x6ee <__addsf3+0xc>
 718:	ba 17       	cp	r27, r26
 71a:	62 07       	cpc	r22, r18
 71c:	73 07       	cpc	r23, r19
 71e:	84 07       	cpc	r24, r20
 720:	95 07       	cpc	r25, r21
 722:	20 f0       	brcs	.+8      	; 0x72c <__addsf3x+0x1c>
 724:	79 f4       	brne	.+30     	; 0x744 <__addsf3x+0x34>
 726:	a6 f5       	brtc	.+104    	; 0x790 <__addsf3x+0x80>
 728:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__fp_zero>
 72c:	0e f4       	brtc	.+2      	; 0x730 <__addsf3x+0x20>
 72e:	e0 95       	com	r30
 730:	0b 2e       	mov	r0, r27
 732:	ba 2f       	mov	r27, r26
 734:	a0 2d       	mov	r26, r0
 736:	0b 01       	movw	r0, r22
 738:	b9 01       	movw	r22, r18
 73a:	90 01       	movw	r18, r0
 73c:	0c 01       	movw	r0, r24
 73e:	ca 01       	movw	r24, r20
 740:	a0 01       	movw	r20, r0
 742:	11 24       	eor	r1, r1
 744:	ff 27       	eor	r31, r31
 746:	59 1b       	sub	r21, r25
 748:	99 f0       	breq	.+38     	; 0x770 <__addsf3x+0x60>
 74a:	59 3f       	cpi	r21, 0xF9	; 249
 74c:	50 f4       	brcc	.+20     	; 0x762 <__addsf3x+0x52>
 74e:	50 3e       	cpi	r21, 0xE0	; 224
 750:	68 f1       	brcs	.+90     	; 0x7ac <__addsf3x+0x9c>
 752:	1a 16       	cp	r1, r26
 754:	f0 40       	sbci	r31, 0x00	; 0
 756:	a2 2f       	mov	r26, r18
 758:	23 2f       	mov	r18, r19
 75a:	34 2f       	mov	r19, r20
 75c:	44 27       	eor	r20, r20
 75e:	58 5f       	subi	r21, 0xF8	; 248
 760:	f3 cf       	rjmp	.-26     	; 0x748 <__addsf3x+0x38>
 762:	46 95       	lsr	r20
 764:	37 95       	ror	r19
 766:	27 95       	ror	r18
 768:	a7 95       	ror	r26
 76a:	f0 40       	sbci	r31, 0x00	; 0
 76c:	53 95       	inc	r21
 76e:	c9 f7       	brne	.-14     	; 0x762 <__addsf3x+0x52>
 770:	7e f4       	brtc	.+30     	; 0x790 <__addsf3x+0x80>
 772:	1f 16       	cp	r1, r31
 774:	ba 0b       	sbc	r27, r26
 776:	62 0b       	sbc	r22, r18
 778:	73 0b       	sbc	r23, r19
 77a:	84 0b       	sbc	r24, r20
 77c:	ba f0       	brmi	.+46     	; 0x7ac <__addsf3x+0x9c>
 77e:	91 50       	subi	r25, 0x01	; 1
 780:	a1 f0       	breq	.+40     	; 0x7aa <__addsf3x+0x9a>
 782:	ff 0f       	add	r31, r31
 784:	bb 1f       	adc	r27, r27
 786:	66 1f       	adc	r22, r22
 788:	77 1f       	adc	r23, r23
 78a:	88 1f       	adc	r24, r24
 78c:	c2 f7       	brpl	.-16     	; 0x77e <__addsf3x+0x6e>
 78e:	0e c0       	rjmp	.+28     	; 0x7ac <__addsf3x+0x9c>
 790:	ba 0f       	add	r27, r26
 792:	62 1f       	adc	r22, r18
 794:	73 1f       	adc	r23, r19
 796:	84 1f       	adc	r24, r20
 798:	48 f4       	brcc	.+18     	; 0x7ac <__addsf3x+0x9c>
 79a:	87 95       	ror	r24
 79c:	77 95       	ror	r23
 79e:	67 95       	ror	r22
 7a0:	b7 95       	ror	r27
 7a2:	f7 95       	ror	r31
 7a4:	9e 3f       	cpi	r25, 0xFE	; 254
 7a6:	08 f0       	brcs	.+2      	; 0x7aa <__addsf3x+0x9a>
 7a8:	b0 cf       	rjmp	.-160    	; 0x70a <__addsf3+0x28>
 7aa:	93 95       	inc	r25
 7ac:	88 0f       	add	r24, r24
 7ae:	08 f0       	brcs	.+2      	; 0x7b2 <__addsf3x+0xa2>
 7b0:	99 27       	eor	r25, r25
 7b2:	ee 0f       	add	r30, r30
 7b4:	97 95       	ror	r25
 7b6:	87 95       	ror	r24
 7b8:	08 95       	ret

000007ba <__divsf3>:
 7ba:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__divsf3x>
 7be:	0c 94 a3 04 	jmp	0x946	; 0x946 <__fp_round>
 7c2:	0e 94 9c 04 	call	0x938	; 0x938 <__fp_pscB>
 7c6:	58 f0       	brcs	.+22     	; 0x7de <__divsf3+0x24>
 7c8:	0e 94 95 04 	call	0x92a	; 0x92a <__fp_pscA>
 7cc:	40 f0       	brcs	.+16     	; 0x7de <__divsf3+0x24>
 7ce:	29 f4       	brne	.+10     	; 0x7da <__divsf3+0x20>
 7d0:	5f 3f       	cpi	r21, 0xFF	; 255
 7d2:	29 f0       	breq	.+10     	; 0x7de <__divsf3+0x24>
 7d4:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_inf>
 7d8:	51 11       	cpse	r21, r1
 7da:	0c 94 d7 04 	jmp	0x9ae	; 0x9ae <__fp_szero>
 7de:	0c 94 92 04 	jmp	0x924	; 0x924 <__fp_nan>

000007e2 <__divsf3x>:
 7e2:	0e 94 b4 04 	call	0x968	; 0x968 <__fp_split3>
 7e6:	68 f3       	brcs	.-38     	; 0x7c2 <__divsf3+0x8>

000007e8 <__divsf3_pse>:
 7e8:	99 23       	and	r25, r25
 7ea:	b1 f3       	breq	.-20     	; 0x7d8 <__divsf3+0x1e>
 7ec:	55 23       	and	r21, r21
 7ee:	91 f3       	breq	.-28     	; 0x7d4 <__divsf3+0x1a>
 7f0:	95 1b       	sub	r25, r21
 7f2:	55 0b       	sbc	r21, r21
 7f4:	bb 27       	eor	r27, r27
 7f6:	aa 27       	eor	r26, r26
 7f8:	62 17       	cp	r22, r18
 7fa:	73 07       	cpc	r23, r19
 7fc:	84 07       	cpc	r24, r20
 7fe:	38 f0       	brcs	.+14     	; 0x80e <__divsf3_pse+0x26>
 800:	9f 5f       	subi	r25, 0xFF	; 255
 802:	5f 4f       	sbci	r21, 0xFF	; 255
 804:	22 0f       	add	r18, r18
 806:	33 1f       	adc	r19, r19
 808:	44 1f       	adc	r20, r20
 80a:	aa 1f       	adc	r26, r26
 80c:	a9 f3       	breq	.-22     	; 0x7f8 <__divsf3_pse+0x10>
 80e:	35 d0       	rcall	.+106    	; 0x87a <__divsf3_pse+0x92>
 810:	0e 2e       	mov	r0, r30
 812:	3a f0       	brmi	.+14     	; 0x822 <__divsf3_pse+0x3a>
 814:	e0 e8       	ldi	r30, 0x80	; 128
 816:	32 d0       	rcall	.+100    	; 0x87c <__divsf3_pse+0x94>
 818:	91 50       	subi	r25, 0x01	; 1
 81a:	50 40       	sbci	r21, 0x00	; 0
 81c:	e6 95       	lsr	r30
 81e:	00 1c       	adc	r0, r0
 820:	ca f7       	brpl	.-14     	; 0x814 <__divsf3_pse+0x2c>
 822:	2b d0       	rcall	.+86     	; 0x87a <__divsf3_pse+0x92>
 824:	fe 2f       	mov	r31, r30
 826:	29 d0       	rcall	.+82     	; 0x87a <__divsf3_pse+0x92>
 828:	66 0f       	add	r22, r22
 82a:	77 1f       	adc	r23, r23
 82c:	88 1f       	adc	r24, r24
 82e:	bb 1f       	adc	r27, r27
 830:	26 17       	cp	r18, r22
 832:	37 07       	cpc	r19, r23
 834:	48 07       	cpc	r20, r24
 836:	ab 07       	cpc	r26, r27
 838:	b0 e8       	ldi	r27, 0x80	; 128
 83a:	09 f0       	breq	.+2      	; 0x83e <__divsf3_pse+0x56>
 83c:	bb 0b       	sbc	r27, r27
 83e:	80 2d       	mov	r24, r0
 840:	bf 01       	movw	r22, r30
 842:	ff 27       	eor	r31, r31
 844:	93 58       	subi	r25, 0x83	; 131
 846:	5f 4f       	sbci	r21, 0xFF	; 255
 848:	3a f0       	brmi	.+14     	; 0x858 <__divsf3_pse+0x70>
 84a:	9e 3f       	cpi	r25, 0xFE	; 254
 84c:	51 05       	cpc	r21, r1
 84e:	78 f0       	brcs	.+30     	; 0x86e <__divsf3_pse+0x86>
 850:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_inf>
 854:	0c 94 d7 04 	jmp	0x9ae	; 0x9ae <__fp_szero>
 858:	5f 3f       	cpi	r21, 0xFF	; 255
 85a:	e4 f3       	brlt	.-8      	; 0x854 <__divsf3_pse+0x6c>
 85c:	98 3e       	cpi	r25, 0xE8	; 232
 85e:	d4 f3       	brlt	.-12     	; 0x854 <__divsf3_pse+0x6c>
 860:	86 95       	lsr	r24
 862:	77 95       	ror	r23
 864:	67 95       	ror	r22
 866:	b7 95       	ror	r27
 868:	f7 95       	ror	r31
 86a:	9f 5f       	subi	r25, 0xFF	; 255
 86c:	c9 f7       	brne	.-14     	; 0x860 <__divsf3_pse+0x78>
 86e:	88 0f       	add	r24, r24
 870:	91 1d       	adc	r25, r1
 872:	96 95       	lsr	r25
 874:	87 95       	ror	r24
 876:	97 f9       	bld	r25, 7
 878:	08 95       	ret
 87a:	e1 e0       	ldi	r30, 0x01	; 1
 87c:	66 0f       	add	r22, r22
 87e:	77 1f       	adc	r23, r23
 880:	88 1f       	adc	r24, r24
 882:	bb 1f       	adc	r27, r27
 884:	62 17       	cp	r22, r18
 886:	73 07       	cpc	r23, r19
 888:	84 07       	cpc	r24, r20
 88a:	ba 07       	cpc	r27, r26
 88c:	20 f0       	brcs	.+8      	; 0x896 <__divsf3_pse+0xae>
 88e:	62 1b       	sub	r22, r18
 890:	73 0b       	sbc	r23, r19
 892:	84 0b       	sbc	r24, r20
 894:	ba 0b       	sbc	r27, r26
 896:	ee 1f       	adc	r30, r30
 898:	88 f7       	brcc	.-30     	; 0x87c <__divsf3_pse+0x94>
 89a:	e0 95       	com	r30
 89c:	08 95       	ret

0000089e <__floatunsisf>:
 89e:	e8 94       	clt
 8a0:	09 c0       	rjmp	.+18     	; 0x8b4 <__floatsisf+0x12>

000008a2 <__floatsisf>:
 8a2:	97 fb       	bst	r25, 7
 8a4:	3e f4       	brtc	.+14     	; 0x8b4 <__floatsisf+0x12>
 8a6:	90 95       	com	r25
 8a8:	80 95       	com	r24
 8aa:	70 95       	com	r23
 8ac:	61 95       	neg	r22
 8ae:	7f 4f       	sbci	r23, 0xFF	; 255
 8b0:	8f 4f       	sbci	r24, 0xFF	; 255
 8b2:	9f 4f       	sbci	r25, 0xFF	; 255
 8b4:	99 23       	and	r25, r25
 8b6:	a9 f0       	breq	.+42     	; 0x8e2 <__floatsisf+0x40>
 8b8:	f9 2f       	mov	r31, r25
 8ba:	96 e9       	ldi	r25, 0x96	; 150
 8bc:	bb 27       	eor	r27, r27
 8be:	93 95       	inc	r25
 8c0:	f6 95       	lsr	r31
 8c2:	87 95       	ror	r24
 8c4:	77 95       	ror	r23
 8c6:	67 95       	ror	r22
 8c8:	b7 95       	ror	r27
 8ca:	f1 11       	cpse	r31, r1
 8cc:	f8 cf       	rjmp	.-16     	; 0x8be <__floatsisf+0x1c>
 8ce:	fa f4       	brpl	.+62     	; 0x90e <__stack+0xf>
 8d0:	bb 0f       	add	r27, r27
 8d2:	11 f4       	brne	.+4      	; 0x8d8 <__floatsisf+0x36>
 8d4:	60 ff       	sbrs	r22, 0
 8d6:	1b c0       	rjmp	.+54     	; 0x90e <__stack+0xf>
 8d8:	6f 5f       	subi	r22, 0xFF	; 255
 8da:	7f 4f       	sbci	r23, 0xFF	; 255
 8dc:	8f 4f       	sbci	r24, 0xFF	; 255
 8de:	9f 4f       	sbci	r25, 0xFF	; 255
 8e0:	16 c0       	rjmp	.+44     	; 0x90e <__stack+0xf>
 8e2:	88 23       	and	r24, r24
 8e4:	11 f0       	breq	.+4      	; 0x8ea <__floatsisf+0x48>
 8e6:	96 e9       	ldi	r25, 0x96	; 150
 8e8:	11 c0       	rjmp	.+34     	; 0x90c <__stack+0xd>
 8ea:	77 23       	and	r23, r23
 8ec:	21 f0       	breq	.+8      	; 0x8f6 <__floatsisf+0x54>
 8ee:	9e e8       	ldi	r25, 0x8E	; 142
 8f0:	87 2f       	mov	r24, r23
 8f2:	76 2f       	mov	r23, r22
 8f4:	05 c0       	rjmp	.+10     	; 0x900 <__stack+0x1>
 8f6:	66 23       	and	r22, r22
 8f8:	71 f0       	breq	.+28     	; 0x916 <__stack+0x17>
 8fa:	96 e8       	ldi	r25, 0x86	; 134
 8fc:	86 2f       	mov	r24, r22
 8fe:	70 e0       	ldi	r23, 0x00	; 0
 900:	60 e0       	ldi	r22, 0x00	; 0
 902:	2a f0       	brmi	.+10     	; 0x90e <__stack+0xf>
 904:	9a 95       	dec	r25
 906:	66 0f       	add	r22, r22
 908:	77 1f       	adc	r23, r23
 90a:	88 1f       	adc	r24, r24
 90c:	da f7       	brpl	.-10     	; 0x904 <__stack+0x5>
 90e:	88 0f       	add	r24, r24
 910:	96 95       	lsr	r25
 912:	87 95       	ror	r24
 914:	97 f9       	bld	r25, 7
 916:	08 95       	ret

00000918 <__fp_inf>:
 918:	97 f9       	bld	r25, 7
 91a:	9f 67       	ori	r25, 0x7F	; 127
 91c:	80 e8       	ldi	r24, 0x80	; 128
 91e:	70 e0       	ldi	r23, 0x00	; 0
 920:	60 e0       	ldi	r22, 0x00	; 0
 922:	08 95       	ret

00000924 <__fp_nan>:
 924:	9f ef       	ldi	r25, 0xFF	; 255
 926:	80 ec       	ldi	r24, 0xC0	; 192
 928:	08 95       	ret

0000092a <__fp_pscA>:
 92a:	00 24       	eor	r0, r0
 92c:	0a 94       	dec	r0
 92e:	16 16       	cp	r1, r22
 930:	17 06       	cpc	r1, r23
 932:	18 06       	cpc	r1, r24
 934:	09 06       	cpc	r0, r25
 936:	08 95       	ret

00000938 <__fp_pscB>:
 938:	00 24       	eor	r0, r0
 93a:	0a 94       	dec	r0
 93c:	12 16       	cp	r1, r18
 93e:	13 06       	cpc	r1, r19
 940:	14 06       	cpc	r1, r20
 942:	05 06       	cpc	r0, r21
 944:	08 95       	ret

00000946 <__fp_round>:
 946:	09 2e       	mov	r0, r25
 948:	03 94       	inc	r0
 94a:	00 0c       	add	r0, r0
 94c:	11 f4       	brne	.+4      	; 0x952 <__fp_round+0xc>
 94e:	88 23       	and	r24, r24
 950:	52 f0       	brmi	.+20     	; 0x966 <__fp_round+0x20>
 952:	bb 0f       	add	r27, r27
 954:	40 f4       	brcc	.+16     	; 0x966 <__fp_round+0x20>
 956:	bf 2b       	or	r27, r31
 958:	11 f4       	brne	.+4      	; 0x95e <__fp_round+0x18>
 95a:	60 ff       	sbrs	r22, 0
 95c:	04 c0       	rjmp	.+8      	; 0x966 <__fp_round+0x20>
 95e:	6f 5f       	subi	r22, 0xFF	; 255
 960:	7f 4f       	sbci	r23, 0xFF	; 255
 962:	8f 4f       	sbci	r24, 0xFF	; 255
 964:	9f 4f       	sbci	r25, 0xFF	; 255
 966:	08 95       	ret

00000968 <__fp_split3>:
 968:	57 fd       	sbrc	r21, 7
 96a:	90 58       	subi	r25, 0x80	; 128
 96c:	44 0f       	add	r20, r20
 96e:	55 1f       	adc	r21, r21
 970:	59 f0       	breq	.+22     	; 0x988 <__fp_splitA+0x10>
 972:	5f 3f       	cpi	r21, 0xFF	; 255
 974:	71 f0       	breq	.+28     	; 0x992 <__fp_splitA+0x1a>
 976:	47 95       	ror	r20

00000978 <__fp_splitA>:
 978:	88 0f       	add	r24, r24
 97a:	97 fb       	bst	r25, 7
 97c:	99 1f       	adc	r25, r25
 97e:	61 f0       	breq	.+24     	; 0x998 <__fp_splitA+0x20>
 980:	9f 3f       	cpi	r25, 0xFF	; 255
 982:	79 f0       	breq	.+30     	; 0x9a2 <__fp_splitA+0x2a>
 984:	87 95       	ror	r24
 986:	08 95       	ret
 988:	12 16       	cp	r1, r18
 98a:	13 06       	cpc	r1, r19
 98c:	14 06       	cpc	r1, r20
 98e:	55 1f       	adc	r21, r21
 990:	f2 cf       	rjmp	.-28     	; 0x976 <__fp_split3+0xe>
 992:	46 95       	lsr	r20
 994:	f1 df       	rcall	.-30     	; 0x978 <__fp_splitA>
 996:	08 c0       	rjmp	.+16     	; 0x9a8 <__fp_splitA+0x30>
 998:	16 16       	cp	r1, r22
 99a:	17 06       	cpc	r1, r23
 99c:	18 06       	cpc	r1, r24
 99e:	99 1f       	adc	r25, r25
 9a0:	f1 cf       	rjmp	.-30     	; 0x984 <__fp_splitA+0xc>
 9a2:	86 95       	lsr	r24
 9a4:	71 05       	cpc	r23, r1
 9a6:	61 05       	cpc	r22, r1
 9a8:	08 94       	sec
 9aa:	08 95       	ret

000009ac <__fp_zero>:
 9ac:	e8 94       	clt

000009ae <__fp_szero>:
 9ae:	bb 27       	eor	r27, r27
 9b0:	66 27       	eor	r22, r22
 9b2:	77 27       	eor	r23, r23
 9b4:	cb 01       	movw	r24, r22
 9b6:	97 f9       	bld	r25, 7
 9b8:	08 95       	ret

000009ba <__mulsf3>:
 9ba:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__mulsf3x>
 9be:	0c 94 a3 04 	jmp	0x946	; 0x946 <__fp_round>
 9c2:	0e 94 95 04 	call	0x92a	; 0x92a <__fp_pscA>
 9c6:	38 f0       	brcs	.+14     	; 0x9d6 <__mulsf3+0x1c>
 9c8:	0e 94 9c 04 	call	0x938	; 0x938 <__fp_pscB>
 9cc:	20 f0       	brcs	.+8      	; 0x9d6 <__mulsf3+0x1c>
 9ce:	95 23       	and	r25, r21
 9d0:	11 f0       	breq	.+4      	; 0x9d6 <__mulsf3+0x1c>
 9d2:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_inf>
 9d6:	0c 94 92 04 	jmp	0x924	; 0x924 <__fp_nan>
 9da:	11 24       	eor	r1, r1
 9dc:	0c 94 d7 04 	jmp	0x9ae	; 0x9ae <__fp_szero>

000009e0 <__mulsf3x>:
 9e0:	0e 94 b4 04 	call	0x968	; 0x968 <__fp_split3>
 9e4:	70 f3       	brcs	.-36     	; 0x9c2 <__mulsf3+0x8>

000009e6 <__mulsf3_pse>:
 9e6:	95 9f       	mul	r25, r21
 9e8:	c1 f3       	breq	.-16     	; 0x9da <__mulsf3+0x20>
 9ea:	95 0f       	add	r25, r21
 9ec:	50 e0       	ldi	r21, 0x00	; 0
 9ee:	55 1f       	adc	r21, r21
 9f0:	62 9f       	mul	r22, r18
 9f2:	f0 01       	movw	r30, r0
 9f4:	72 9f       	mul	r23, r18
 9f6:	bb 27       	eor	r27, r27
 9f8:	f0 0d       	add	r31, r0
 9fa:	b1 1d       	adc	r27, r1
 9fc:	63 9f       	mul	r22, r19
 9fe:	aa 27       	eor	r26, r26
 a00:	f0 0d       	add	r31, r0
 a02:	b1 1d       	adc	r27, r1
 a04:	aa 1f       	adc	r26, r26
 a06:	64 9f       	mul	r22, r20
 a08:	66 27       	eor	r22, r22
 a0a:	b0 0d       	add	r27, r0
 a0c:	a1 1d       	adc	r26, r1
 a0e:	66 1f       	adc	r22, r22
 a10:	82 9f       	mul	r24, r18
 a12:	22 27       	eor	r18, r18
 a14:	b0 0d       	add	r27, r0
 a16:	a1 1d       	adc	r26, r1
 a18:	62 1f       	adc	r22, r18
 a1a:	73 9f       	mul	r23, r19
 a1c:	b0 0d       	add	r27, r0
 a1e:	a1 1d       	adc	r26, r1
 a20:	62 1f       	adc	r22, r18
 a22:	83 9f       	mul	r24, r19
 a24:	a0 0d       	add	r26, r0
 a26:	61 1d       	adc	r22, r1
 a28:	22 1f       	adc	r18, r18
 a2a:	74 9f       	mul	r23, r20
 a2c:	33 27       	eor	r19, r19
 a2e:	a0 0d       	add	r26, r0
 a30:	61 1d       	adc	r22, r1
 a32:	23 1f       	adc	r18, r19
 a34:	84 9f       	mul	r24, r20
 a36:	60 0d       	add	r22, r0
 a38:	21 1d       	adc	r18, r1
 a3a:	82 2f       	mov	r24, r18
 a3c:	76 2f       	mov	r23, r22
 a3e:	6a 2f       	mov	r22, r26
 a40:	11 24       	eor	r1, r1
 a42:	9f 57       	subi	r25, 0x7F	; 127
 a44:	50 40       	sbci	r21, 0x00	; 0
 a46:	9a f0       	brmi	.+38     	; 0xa6e <__mulsf3_pse+0x88>
 a48:	f1 f0       	breq	.+60     	; 0xa86 <__mulsf3_pse+0xa0>
 a4a:	88 23       	and	r24, r24
 a4c:	4a f0       	brmi	.+18     	; 0xa60 <__mulsf3_pse+0x7a>
 a4e:	ee 0f       	add	r30, r30
 a50:	ff 1f       	adc	r31, r31
 a52:	bb 1f       	adc	r27, r27
 a54:	66 1f       	adc	r22, r22
 a56:	77 1f       	adc	r23, r23
 a58:	88 1f       	adc	r24, r24
 a5a:	91 50       	subi	r25, 0x01	; 1
 a5c:	50 40       	sbci	r21, 0x00	; 0
 a5e:	a9 f7       	brne	.-22     	; 0xa4a <__mulsf3_pse+0x64>
 a60:	9e 3f       	cpi	r25, 0xFE	; 254
 a62:	51 05       	cpc	r21, r1
 a64:	80 f0       	brcs	.+32     	; 0xa86 <__mulsf3_pse+0xa0>
 a66:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_inf>
 a6a:	0c 94 d7 04 	jmp	0x9ae	; 0x9ae <__fp_szero>
 a6e:	5f 3f       	cpi	r21, 0xFF	; 255
 a70:	e4 f3       	brlt	.-8      	; 0xa6a <__mulsf3_pse+0x84>
 a72:	98 3e       	cpi	r25, 0xE8	; 232
 a74:	d4 f3       	brlt	.-12     	; 0xa6a <__mulsf3_pse+0x84>
 a76:	86 95       	lsr	r24
 a78:	77 95       	ror	r23
 a7a:	67 95       	ror	r22
 a7c:	b7 95       	ror	r27
 a7e:	f7 95       	ror	r31
 a80:	e7 95       	ror	r30
 a82:	9f 5f       	subi	r25, 0xFF	; 255
 a84:	c1 f7       	brne	.-16     	; 0xa76 <__mulsf3_pse+0x90>
 a86:	fe 2b       	or	r31, r30
 a88:	88 0f       	add	r24, r24
 a8a:	91 1d       	adc	r25, r1
 a8c:	96 95       	lsr	r25
 a8e:	87 95       	ror	r24
 a90:	97 f9       	bld	r25, 7
 a92:	08 95       	ret

00000a94 <__umulhisi3>:
 a94:	a2 9f       	mul	r26, r18
 a96:	b0 01       	movw	r22, r0
 a98:	b3 9f       	mul	r27, r19
 a9a:	c0 01       	movw	r24, r0
 a9c:	a3 9f       	mul	r26, r19
 a9e:	70 0d       	add	r23, r0
 aa0:	81 1d       	adc	r24, r1
 aa2:	11 24       	eor	r1, r1
 aa4:	91 1d       	adc	r25, r1
 aa6:	b2 9f       	mul	r27, r18
 aa8:	70 0d       	add	r23, r0
 aaa:	81 1d       	adc	r24, r1
 aac:	11 24       	eor	r1, r1
 aae:	91 1d       	adc	r25, r1
 ab0:	08 95       	ret

00000ab2 <dtostrf>:
 ab2:	ef 92       	push	r14
 ab4:	0f 93       	push	r16
 ab6:	1f 93       	push	r17
 ab8:	cf 93       	push	r28
 aba:	df 93       	push	r29
 abc:	e8 01       	movw	r28, r16
 abe:	47 fd       	sbrc	r20, 7
 ac0:	02 c0       	rjmp	.+4      	; 0xac6 <dtostrf+0x14>
 ac2:	34 e0       	ldi	r19, 0x04	; 4
 ac4:	01 c0       	rjmp	.+2      	; 0xac8 <dtostrf+0x16>
 ac6:	34 e1       	ldi	r19, 0x14	; 20
 ac8:	04 2e       	mov	r0, r20
 aca:	00 0c       	add	r0, r0
 acc:	55 0b       	sbc	r21, r21
 ace:	57 ff       	sbrs	r21, 7
 ad0:	03 c0       	rjmp	.+6      	; 0xad8 <dtostrf+0x26>
 ad2:	51 95       	neg	r21
 ad4:	41 95       	neg	r20
 ad6:	51 09       	sbc	r21, r1
 ad8:	e3 2e       	mov	r14, r19
 ada:	02 2f       	mov	r16, r18
 adc:	24 2f       	mov	r18, r20
 ade:	ae 01       	movw	r20, r28
 ae0:	0e 94 79 05 	call	0xaf2	; 0xaf2 <dtoa_prf>
 ae4:	ce 01       	movw	r24, r28
 ae6:	df 91       	pop	r29
 ae8:	cf 91       	pop	r28
 aea:	1f 91       	pop	r17
 aec:	0f 91       	pop	r16
 aee:	ef 90       	pop	r14
 af0:	08 95       	ret

00000af2 <dtoa_prf>:
 af2:	a9 e0       	ldi	r26, 0x09	; 9
 af4:	b0 e0       	ldi	r27, 0x00	; 0
 af6:	ef e7       	ldi	r30, 0x7F	; 127
 af8:	f5 e0       	ldi	r31, 0x05	; 5
 afa:	0c 94 b1 07 	jmp	0xf62	; 0xf62 <__prologue_saves__+0xc>
 afe:	6a 01       	movw	r12, r20
 b00:	12 2f       	mov	r17, r18
 b02:	b0 2e       	mov	r11, r16
 b04:	2b e3       	ldi	r18, 0x3B	; 59
 b06:	20 17       	cp	r18, r16
 b08:	20 f0       	brcs	.+8      	; 0xb12 <dtoa_prf+0x20>
 b0a:	ff 24       	eor	r15, r15
 b0c:	f3 94       	inc	r15
 b0e:	f0 0e       	add	r15, r16
 b10:	02 c0       	rjmp	.+4      	; 0xb16 <dtoa_prf+0x24>
 b12:	2c e3       	ldi	r18, 0x3C	; 60
 b14:	f2 2e       	mov	r15, r18
 b16:	0f 2d       	mov	r16, r15
 b18:	27 e0       	ldi	r18, 0x07	; 7
 b1a:	ae 01       	movw	r20, r28
 b1c:	4f 5f       	subi	r20, 0xFF	; 255
 b1e:	5f 4f       	sbci	r21, 0xFF	; 255
 b20:	0e 94 d3 06 	call	0xda6	; 0xda6 <__ftoa_engine>
 b24:	bc 01       	movw	r22, r24
 b26:	49 81       	ldd	r20, Y+1	; 0x01
 b28:	84 2f       	mov	r24, r20
 b2a:	89 70       	andi	r24, 0x09	; 9
 b2c:	81 30       	cpi	r24, 0x01	; 1
 b2e:	31 f0       	breq	.+12     	; 0xb3c <dtoa_prf+0x4a>
 b30:	e1 fc       	sbrc	r14, 1
 b32:	06 c0       	rjmp	.+12     	; 0xb40 <dtoa_prf+0x4e>
 b34:	e0 fe       	sbrs	r14, 0
 b36:	06 c0       	rjmp	.+12     	; 0xb44 <dtoa_prf+0x52>
 b38:	90 e2       	ldi	r25, 0x20	; 32
 b3a:	05 c0       	rjmp	.+10     	; 0xb46 <dtoa_prf+0x54>
 b3c:	9d e2       	ldi	r25, 0x2D	; 45
 b3e:	03 c0       	rjmp	.+6      	; 0xb46 <dtoa_prf+0x54>
 b40:	9b e2       	ldi	r25, 0x2B	; 43
 b42:	01 c0       	rjmp	.+2      	; 0xb46 <dtoa_prf+0x54>
 b44:	90 e0       	ldi	r25, 0x00	; 0
 b46:	5e 2d       	mov	r21, r14
 b48:	50 71       	andi	r21, 0x10	; 16
 b4a:	43 ff       	sbrs	r20, 3
 b4c:	3c c0       	rjmp	.+120    	; 0xbc6 <dtoa_prf+0xd4>
 b4e:	91 11       	cpse	r25, r1
 b50:	02 c0       	rjmp	.+4      	; 0xb56 <dtoa_prf+0x64>
 b52:	83 e0       	ldi	r24, 0x03	; 3
 b54:	01 c0       	rjmp	.+2      	; 0xb58 <dtoa_prf+0x66>
 b56:	84 e0       	ldi	r24, 0x04	; 4
 b58:	81 17       	cp	r24, r17
 b5a:	18 f4       	brcc	.+6      	; 0xb62 <dtoa_prf+0x70>
 b5c:	21 2f       	mov	r18, r17
 b5e:	28 1b       	sub	r18, r24
 b60:	01 c0       	rjmp	.+2      	; 0xb64 <dtoa_prf+0x72>
 b62:	20 e0       	ldi	r18, 0x00	; 0
 b64:	51 11       	cpse	r21, r1
 b66:	0b c0       	rjmp	.+22     	; 0xb7e <dtoa_prf+0x8c>
 b68:	f6 01       	movw	r30, r12
 b6a:	82 2f       	mov	r24, r18
 b6c:	30 e2       	ldi	r19, 0x20	; 32
 b6e:	88 23       	and	r24, r24
 b70:	19 f0       	breq	.+6      	; 0xb78 <dtoa_prf+0x86>
 b72:	31 93       	st	Z+, r19
 b74:	81 50       	subi	r24, 0x01	; 1
 b76:	fb cf       	rjmp	.-10     	; 0xb6e <dtoa_prf+0x7c>
 b78:	c2 0e       	add	r12, r18
 b7a:	d1 1c       	adc	r13, r1
 b7c:	20 e0       	ldi	r18, 0x00	; 0
 b7e:	99 23       	and	r25, r25
 b80:	29 f0       	breq	.+10     	; 0xb8c <dtoa_prf+0x9a>
 b82:	d6 01       	movw	r26, r12
 b84:	9c 93       	st	X, r25
 b86:	f6 01       	movw	r30, r12
 b88:	31 96       	adiw	r30, 0x01	; 1
 b8a:	6f 01       	movw	r12, r30
 b8c:	c6 01       	movw	r24, r12
 b8e:	03 96       	adiw	r24, 0x03	; 3
 b90:	e2 fe       	sbrs	r14, 2
 b92:	0a c0       	rjmp	.+20     	; 0xba8 <dtoa_prf+0xb6>
 b94:	3e e4       	ldi	r19, 0x4E	; 78
 b96:	d6 01       	movw	r26, r12
 b98:	3c 93       	st	X, r19
 b9a:	41 e4       	ldi	r20, 0x41	; 65
 b9c:	11 96       	adiw	r26, 0x01	; 1
 b9e:	4c 93       	st	X, r20
 ba0:	11 97       	sbiw	r26, 0x01	; 1
 ba2:	12 96       	adiw	r26, 0x02	; 2
 ba4:	3c 93       	st	X, r19
 ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <dtoa_prf+0xc2>
 ba8:	3e e6       	ldi	r19, 0x6E	; 110
 baa:	f6 01       	movw	r30, r12
 bac:	30 83       	st	Z, r19
 bae:	41 e6       	ldi	r20, 0x61	; 97
 bb0:	41 83       	std	Z+1, r20	; 0x01
 bb2:	32 83       	std	Z+2, r19	; 0x02
 bb4:	fc 01       	movw	r30, r24
 bb6:	32 2f       	mov	r19, r18
 bb8:	40 e2       	ldi	r20, 0x20	; 32
 bba:	33 23       	and	r19, r19
 bbc:	09 f4       	brne	.+2      	; 0xbc0 <dtoa_prf+0xce>
 bbe:	42 c0       	rjmp	.+132    	; 0xc44 <dtoa_prf+0x152>
 bc0:	41 93       	st	Z+, r20
 bc2:	31 50       	subi	r19, 0x01	; 1
 bc4:	fa cf       	rjmp	.-12     	; 0xbba <dtoa_prf+0xc8>
 bc6:	42 ff       	sbrs	r20, 2
 bc8:	44 c0       	rjmp	.+136    	; 0xc52 <dtoa_prf+0x160>
 bca:	91 11       	cpse	r25, r1
 bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <dtoa_prf+0xe0>
 bce:	83 e0       	ldi	r24, 0x03	; 3
 bd0:	01 c0       	rjmp	.+2      	; 0xbd4 <dtoa_prf+0xe2>
 bd2:	84 e0       	ldi	r24, 0x04	; 4
 bd4:	81 17       	cp	r24, r17
 bd6:	18 f4       	brcc	.+6      	; 0xbde <dtoa_prf+0xec>
 bd8:	21 2f       	mov	r18, r17
 bda:	28 1b       	sub	r18, r24
 bdc:	01 c0       	rjmp	.+2      	; 0xbe0 <dtoa_prf+0xee>
 bde:	20 e0       	ldi	r18, 0x00	; 0
 be0:	51 11       	cpse	r21, r1
 be2:	0b c0       	rjmp	.+22     	; 0xbfa <dtoa_prf+0x108>
 be4:	f6 01       	movw	r30, r12
 be6:	82 2f       	mov	r24, r18
 be8:	30 e2       	ldi	r19, 0x20	; 32
 bea:	88 23       	and	r24, r24
 bec:	19 f0       	breq	.+6      	; 0xbf4 <dtoa_prf+0x102>
 bee:	31 93       	st	Z+, r19
 bf0:	81 50       	subi	r24, 0x01	; 1
 bf2:	fb cf       	rjmp	.-10     	; 0xbea <dtoa_prf+0xf8>
 bf4:	c2 0e       	add	r12, r18
 bf6:	d1 1c       	adc	r13, r1
 bf8:	20 e0       	ldi	r18, 0x00	; 0
 bfa:	99 23       	and	r25, r25
 bfc:	29 f0       	breq	.+10     	; 0xc08 <dtoa_prf+0x116>
 bfe:	d6 01       	movw	r26, r12
 c00:	9c 93       	st	X, r25
 c02:	f6 01       	movw	r30, r12
 c04:	31 96       	adiw	r30, 0x01	; 1
 c06:	6f 01       	movw	r12, r30
 c08:	c6 01       	movw	r24, r12
 c0a:	03 96       	adiw	r24, 0x03	; 3
 c0c:	e2 fe       	sbrs	r14, 2
 c0e:	0b c0       	rjmp	.+22     	; 0xc26 <dtoa_prf+0x134>
 c10:	39 e4       	ldi	r19, 0x49	; 73
 c12:	d6 01       	movw	r26, r12
 c14:	3c 93       	st	X, r19
 c16:	3e e4       	ldi	r19, 0x4E	; 78
 c18:	11 96       	adiw	r26, 0x01	; 1
 c1a:	3c 93       	st	X, r19
 c1c:	11 97       	sbiw	r26, 0x01	; 1
 c1e:	36 e4       	ldi	r19, 0x46	; 70
 c20:	12 96       	adiw	r26, 0x02	; 2
 c22:	3c 93       	st	X, r19
 c24:	07 c0       	rjmp	.+14     	; 0xc34 <dtoa_prf+0x142>
 c26:	39 e6       	ldi	r19, 0x69	; 105
 c28:	f6 01       	movw	r30, r12
 c2a:	30 83       	st	Z, r19
 c2c:	3e e6       	ldi	r19, 0x6E	; 110
 c2e:	31 83       	std	Z+1, r19	; 0x01
 c30:	36 e6       	ldi	r19, 0x66	; 102
 c32:	32 83       	std	Z+2, r19	; 0x02
 c34:	fc 01       	movw	r30, r24
 c36:	32 2f       	mov	r19, r18
 c38:	40 e2       	ldi	r20, 0x20	; 32
 c3a:	33 23       	and	r19, r19
 c3c:	19 f0       	breq	.+6      	; 0xc44 <dtoa_prf+0x152>
 c3e:	41 93       	st	Z+, r20
 c40:	31 50       	subi	r19, 0x01	; 1
 c42:	fb cf       	rjmp	.-10     	; 0xc3a <dtoa_prf+0x148>
 c44:	fc 01       	movw	r30, r24
 c46:	e2 0f       	add	r30, r18
 c48:	f1 1d       	adc	r31, r1
 c4a:	10 82       	st	Z, r1
 c4c:	8e ef       	ldi	r24, 0xFE	; 254
 c4e:	9f ef       	ldi	r25, 0xFF	; 255
 c50:	a6 c0       	rjmp	.+332    	; 0xd9e <dtoa_prf+0x2ac>
 c52:	21 e0       	ldi	r18, 0x01	; 1
 c54:	30 e0       	ldi	r19, 0x00	; 0
 c56:	91 11       	cpse	r25, r1
 c58:	02 c0       	rjmp	.+4      	; 0xc5e <dtoa_prf+0x16c>
 c5a:	20 e0       	ldi	r18, 0x00	; 0
 c5c:	30 e0       	ldi	r19, 0x00	; 0
 c5e:	16 16       	cp	r1, r22
 c60:	17 06       	cpc	r1, r23
 c62:	1c f4       	brge	.+6      	; 0xc6a <dtoa_prf+0x178>
 c64:	fb 01       	movw	r30, r22
 c66:	31 96       	adiw	r30, 0x01	; 1
 c68:	02 c0       	rjmp	.+4      	; 0xc6e <dtoa_prf+0x17c>
 c6a:	e1 e0       	ldi	r30, 0x01	; 1
 c6c:	f0 e0       	ldi	r31, 0x00	; 0
 c6e:	2e 0f       	add	r18, r30
 c70:	3f 1f       	adc	r19, r31
 c72:	bb 20       	and	r11, r11
 c74:	21 f0       	breq	.+8      	; 0xc7e <dtoa_prf+0x18c>
 c76:	eb 2d       	mov	r30, r11
 c78:	f0 e0       	ldi	r31, 0x00	; 0
 c7a:	31 96       	adiw	r30, 0x01	; 1
 c7c:	02 c0       	rjmp	.+4      	; 0xc82 <dtoa_prf+0x190>
 c7e:	e0 e0       	ldi	r30, 0x00	; 0
 c80:	f0 e0       	ldi	r31, 0x00	; 0
 c82:	2e 0f       	add	r18, r30
 c84:	3f 1f       	adc	r19, r31
 c86:	e1 2f       	mov	r30, r17
 c88:	f0 e0       	ldi	r31, 0x00	; 0
 c8a:	2e 17       	cp	r18, r30
 c8c:	3f 07       	cpc	r19, r31
 c8e:	1c f4       	brge	.+6      	; 0xc96 <dtoa_prf+0x1a4>
 c90:	12 1b       	sub	r17, r18
 c92:	21 2f       	mov	r18, r17
 c94:	01 c0       	rjmp	.+2      	; 0xc98 <dtoa_prf+0x1a6>
 c96:	20 e0       	ldi	r18, 0x00	; 0
 c98:	8e 2d       	mov	r24, r14
 c9a:	88 71       	andi	r24, 0x18	; 24
 c9c:	59 f4       	brne	.+22     	; 0xcb4 <dtoa_prf+0x1c2>
 c9e:	f6 01       	movw	r30, r12
 ca0:	82 2f       	mov	r24, r18
 ca2:	30 e2       	ldi	r19, 0x20	; 32
 ca4:	88 23       	and	r24, r24
 ca6:	19 f0       	breq	.+6      	; 0xcae <dtoa_prf+0x1bc>
 ca8:	31 93       	st	Z+, r19
 caa:	81 50       	subi	r24, 0x01	; 1
 cac:	fb cf       	rjmp	.-10     	; 0xca4 <dtoa_prf+0x1b2>
 cae:	c2 0e       	add	r12, r18
 cb0:	d1 1c       	adc	r13, r1
 cb2:	20 e0       	ldi	r18, 0x00	; 0
 cb4:	99 23       	and	r25, r25
 cb6:	29 f0       	breq	.+10     	; 0xcc2 <dtoa_prf+0x1d0>
 cb8:	d6 01       	movw	r26, r12
 cba:	9c 93       	st	X, r25
 cbc:	f6 01       	movw	r30, r12
 cbe:	31 96       	adiw	r30, 0x01	; 1
 cc0:	6f 01       	movw	r12, r30
 cc2:	51 11       	cpse	r21, r1
 cc4:	0b c0       	rjmp	.+22     	; 0xcdc <dtoa_prf+0x1ea>
 cc6:	f6 01       	movw	r30, r12
 cc8:	82 2f       	mov	r24, r18
 cca:	90 e3       	ldi	r25, 0x30	; 48
 ccc:	88 23       	and	r24, r24
 cce:	19 f0       	breq	.+6      	; 0xcd6 <dtoa_prf+0x1e4>
 cd0:	91 93       	st	Z+, r25
 cd2:	81 50       	subi	r24, 0x01	; 1
 cd4:	fb cf       	rjmp	.-10     	; 0xccc <dtoa_prf+0x1da>
 cd6:	c2 0e       	add	r12, r18
 cd8:	d1 1c       	adc	r13, r1
 cda:	20 e0       	ldi	r18, 0x00	; 0
 cdc:	0f 2d       	mov	r16, r15
 cde:	06 0f       	add	r16, r22
 ce0:	9a 81       	ldd	r25, Y+2	; 0x02
 ce2:	34 2f       	mov	r19, r20
 ce4:	30 71       	andi	r19, 0x10	; 16
 ce6:	44 ff       	sbrs	r20, 4
 ce8:	03 c0       	rjmp	.+6      	; 0xcf0 <dtoa_prf+0x1fe>
 cea:	91 33       	cpi	r25, 0x31	; 49
 cec:	09 f4       	brne	.+2      	; 0xcf0 <dtoa_prf+0x1fe>
 cee:	01 50       	subi	r16, 0x01	; 1
 cf0:	10 16       	cp	r1, r16
 cf2:	24 f4       	brge	.+8      	; 0xcfc <dtoa_prf+0x20a>
 cf4:	09 30       	cpi	r16, 0x09	; 9
 cf6:	18 f0       	brcs	.+6      	; 0xcfe <dtoa_prf+0x20c>
 cf8:	08 e0       	ldi	r16, 0x08	; 8
 cfa:	01 c0       	rjmp	.+2      	; 0xcfe <dtoa_prf+0x20c>
 cfc:	01 e0       	ldi	r16, 0x01	; 1
 cfe:	ab 01       	movw	r20, r22
 d00:	77 ff       	sbrs	r23, 7
 d02:	02 c0       	rjmp	.+4      	; 0xd08 <dtoa_prf+0x216>
 d04:	40 e0       	ldi	r20, 0x00	; 0
 d06:	50 e0       	ldi	r21, 0x00	; 0
 d08:	fb 01       	movw	r30, r22
 d0a:	e4 1b       	sub	r30, r20
 d0c:	f5 0b       	sbc	r31, r21
 d0e:	a1 e0       	ldi	r26, 0x01	; 1
 d10:	b0 e0       	ldi	r27, 0x00	; 0
 d12:	ac 0f       	add	r26, r28
 d14:	bd 1f       	adc	r27, r29
 d16:	ea 0f       	add	r30, r26
 d18:	fb 1f       	adc	r31, r27
 d1a:	8e e2       	ldi	r24, 0x2E	; 46
 d1c:	a8 2e       	mov	r10, r24
 d1e:	4b 01       	movw	r8, r22
 d20:	80 1a       	sub	r8, r16
 d22:	91 08       	sbc	r9, r1
 d24:	0b 2d       	mov	r16, r11
 d26:	10 e0       	ldi	r17, 0x00	; 0
 d28:	11 95       	neg	r17
 d2a:	01 95       	neg	r16
 d2c:	11 09       	sbc	r17, r1
 d2e:	4f 3f       	cpi	r20, 0xFF	; 255
 d30:	bf ef       	ldi	r27, 0xFF	; 255
 d32:	5b 07       	cpc	r21, r27
 d34:	21 f4       	brne	.+8      	; 0xd3e <dtoa_prf+0x24c>
 d36:	d6 01       	movw	r26, r12
 d38:	ac 92       	st	X, r10
 d3a:	11 96       	adiw	r26, 0x01	; 1
 d3c:	6d 01       	movw	r12, r26
 d3e:	64 17       	cp	r22, r20
 d40:	75 07       	cpc	r23, r21
 d42:	2c f0       	brlt	.+10     	; 0xd4e <dtoa_prf+0x25c>
 d44:	84 16       	cp	r8, r20
 d46:	95 06       	cpc	r9, r21
 d48:	14 f4       	brge	.+4      	; 0xd4e <dtoa_prf+0x25c>
 d4a:	81 81       	ldd	r24, Z+1	; 0x01
 d4c:	01 c0       	rjmp	.+2      	; 0xd50 <dtoa_prf+0x25e>
 d4e:	80 e3       	ldi	r24, 0x30	; 48
 d50:	41 50       	subi	r20, 0x01	; 1
 d52:	51 09       	sbc	r21, r1
 d54:	31 96       	adiw	r30, 0x01	; 1
 d56:	d6 01       	movw	r26, r12
 d58:	11 96       	adiw	r26, 0x01	; 1
 d5a:	7d 01       	movw	r14, r26
 d5c:	40 17       	cp	r20, r16
 d5e:	51 07       	cpc	r21, r17
 d60:	24 f0       	brlt	.+8      	; 0xd6a <dtoa_prf+0x278>
 d62:	d6 01       	movw	r26, r12
 d64:	8c 93       	st	X, r24
 d66:	67 01       	movw	r12, r14
 d68:	e2 cf       	rjmp	.-60     	; 0xd2e <dtoa_prf+0x23c>
 d6a:	64 17       	cp	r22, r20
 d6c:	75 07       	cpc	r23, r21
 d6e:	39 f4       	brne	.+14     	; 0xd7e <dtoa_prf+0x28c>
 d70:	96 33       	cpi	r25, 0x36	; 54
 d72:	20 f4       	brcc	.+8      	; 0xd7c <dtoa_prf+0x28a>
 d74:	95 33       	cpi	r25, 0x35	; 53
 d76:	19 f4       	brne	.+6      	; 0xd7e <dtoa_prf+0x28c>
 d78:	31 11       	cpse	r19, r1
 d7a:	01 c0       	rjmp	.+2      	; 0xd7e <dtoa_prf+0x28c>
 d7c:	81 e3       	ldi	r24, 0x31	; 49
 d7e:	f6 01       	movw	r30, r12
 d80:	80 83       	st	Z, r24
 d82:	f7 01       	movw	r30, r14
 d84:	82 2f       	mov	r24, r18
 d86:	90 e2       	ldi	r25, 0x20	; 32
 d88:	88 23       	and	r24, r24
 d8a:	19 f0       	breq	.+6      	; 0xd92 <dtoa_prf+0x2a0>
 d8c:	91 93       	st	Z+, r25
 d8e:	81 50       	subi	r24, 0x01	; 1
 d90:	fb cf       	rjmp	.-10     	; 0xd88 <dtoa_prf+0x296>
 d92:	f7 01       	movw	r30, r14
 d94:	e2 0f       	add	r30, r18
 d96:	f1 1d       	adc	r31, r1
 d98:	10 82       	st	Z, r1
 d9a:	80 e0       	ldi	r24, 0x00	; 0
 d9c:	90 e0       	ldi	r25, 0x00	; 0
 d9e:	29 96       	adiw	r28, 0x09	; 9
 da0:	ec e0       	ldi	r30, 0x0C	; 12
 da2:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <__epilogue_restores__+0xc>

00000da6 <__ftoa_engine>:
 da6:	28 30       	cpi	r18, 0x08	; 8
 da8:	08 f0       	brcs	.+2      	; 0xdac <__ftoa_engine+0x6>
 daa:	27 e0       	ldi	r18, 0x07	; 7
 dac:	33 27       	eor	r19, r19
 dae:	da 01       	movw	r26, r20
 db0:	99 0f       	add	r25, r25
 db2:	31 1d       	adc	r19, r1
 db4:	87 fd       	sbrc	r24, 7
 db6:	91 60       	ori	r25, 0x01	; 1
 db8:	00 96       	adiw	r24, 0x00	; 0
 dba:	61 05       	cpc	r22, r1
 dbc:	71 05       	cpc	r23, r1
 dbe:	39 f4       	brne	.+14     	; 0xdce <__ftoa_engine+0x28>
 dc0:	32 60       	ori	r19, 0x02	; 2
 dc2:	2e 5f       	subi	r18, 0xFE	; 254
 dc4:	3d 93       	st	X+, r19
 dc6:	30 e3       	ldi	r19, 0x30	; 48
 dc8:	2a 95       	dec	r18
 dca:	e1 f7       	brne	.-8      	; 0xdc4 <__ftoa_engine+0x1e>
 dcc:	08 95       	ret
 dce:	9f 3f       	cpi	r25, 0xFF	; 255
 dd0:	30 f0       	brcs	.+12     	; 0xdde <__ftoa_engine+0x38>
 dd2:	80 38       	cpi	r24, 0x80	; 128
 dd4:	71 05       	cpc	r23, r1
 dd6:	61 05       	cpc	r22, r1
 dd8:	09 f0       	breq	.+2      	; 0xddc <__ftoa_engine+0x36>
 dda:	3c 5f       	subi	r19, 0xFC	; 252
 ddc:	3c 5f       	subi	r19, 0xFC	; 252
 dde:	3d 93       	st	X+, r19
 de0:	91 30       	cpi	r25, 0x01	; 1
 de2:	08 f0       	brcs	.+2      	; 0xde6 <__ftoa_engine+0x40>
 de4:	80 68       	ori	r24, 0x80	; 128
 de6:	91 1d       	adc	r25, r1
 de8:	df 93       	push	r29
 dea:	cf 93       	push	r28
 dec:	1f 93       	push	r17
 dee:	0f 93       	push	r16
 df0:	ff 92       	push	r15
 df2:	ef 92       	push	r14
 df4:	19 2f       	mov	r17, r25
 df6:	98 7f       	andi	r25, 0xF8	; 248
 df8:	96 95       	lsr	r25
 dfa:	e9 2f       	mov	r30, r25
 dfc:	96 95       	lsr	r25
 dfe:	96 95       	lsr	r25
 e00:	e9 0f       	add	r30, r25
 e02:	ff 27       	eor	r31, r31
 e04:	ee 53       	subi	r30, 0x3E	; 62
 e06:	ff 4f       	sbci	r31, 0xFF	; 255
 e08:	99 27       	eor	r25, r25
 e0a:	33 27       	eor	r19, r19
 e0c:	ee 24       	eor	r14, r14
 e0e:	ff 24       	eor	r15, r15
 e10:	a7 01       	movw	r20, r14
 e12:	e7 01       	movw	r28, r14
 e14:	05 90       	lpm	r0, Z+
 e16:	08 94       	sec
 e18:	07 94       	ror	r0
 e1a:	28 f4       	brcc	.+10     	; 0xe26 <__ftoa_engine+0x80>
 e1c:	36 0f       	add	r19, r22
 e1e:	e7 1e       	adc	r14, r23
 e20:	f8 1e       	adc	r15, r24
 e22:	49 1f       	adc	r20, r25
 e24:	51 1d       	adc	r21, r1
 e26:	66 0f       	add	r22, r22
 e28:	77 1f       	adc	r23, r23
 e2a:	88 1f       	adc	r24, r24
 e2c:	99 1f       	adc	r25, r25
 e2e:	06 94       	lsr	r0
 e30:	a1 f7       	brne	.-24     	; 0xe1a <__ftoa_engine+0x74>
 e32:	05 90       	lpm	r0, Z+
 e34:	07 94       	ror	r0
 e36:	28 f4       	brcc	.+10     	; 0xe42 <__ftoa_engine+0x9c>
 e38:	e7 0e       	add	r14, r23
 e3a:	f8 1e       	adc	r15, r24
 e3c:	49 1f       	adc	r20, r25
 e3e:	56 1f       	adc	r21, r22
 e40:	c1 1d       	adc	r28, r1
 e42:	77 0f       	add	r23, r23
 e44:	88 1f       	adc	r24, r24
 e46:	99 1f       	adc	r25, r25
 e48:	66 1f       	adc	r22, r22
 e4a:	06 94       	lsr	r0
 e4c:	a1 f7       	brne	.-24     	; 0xe36 <__ftoa_engine+0x90>
 e4e:	05 90       	lpm	r0, Z+
 e50:	07 94       	ror	r0
 e52:	28 f4       	brcc	.+10     	; 0xe5e <__ftoa_engine+0xb8>
 e54:	f8 0e       	add	r15, r24
 e56:	49 1f       	adc	r20, r25
 e58:	56 1f       	adc	r21, r22
 e5a:	c7 1f       	adc	r28, r23
 e5c:	d1 1d       	adc	r29, r1
 e5e:	88 0f       	add	r24, r24
 e60:	99 1f       	adc	r25, r25
 e62:	66 1f       	adc	r22, r22
 e64:	77 1f       	adc	r23, r23
 e66:	06 94       	lsr	r0
 e68:	a1 f7       	brne	.-24     	; 0xe52 <__ftoa_engine+0xac>
 e6a:	05 90       	lpm	r0, Z+
 e6c:	07 94       	ror	r0
 e6e:	20 f4       	brcc	.+8      	; 0xe78 <__ftoa_engine+0xd2>
 e70:	49 0f       	add	r20, r25
 e72:	56 1f       	adc	r21, r22
 e74:	c7 1f       	adc	r28, r23
 e76:	d8 1f       	adc	r29, r24
 e78:	99 0f       	add	r25, r25
 e7a:	66 1f       	adc	r22, r22
 e7c:	77 1f       	adc	r23, r23
 e7e:	88 1f       	adc	r24, r24
 e80:	06 94       	lsr	r0
 e82:	a9 f7       	brne	.-22     	; 0xe6e <__ftoa_engine+0xc8>
 e84:	84 91       	lpm	r24, Z
 e86:	10 95       	com	r17
 e88:	17 70       	andi	r17, 0x07	; 7
 e8a:	41 f0       	breq	.+16     	; 0xe9c <__ftoa_engine+0xf6>
 e8c:	d6 95       	lsr	r29
 e8e:	c7 95       	ror	r28
 e90:	57 95       	ror	r21
 e92:	47 95       	ror	r20
 e94:	f7 94       	ror	r15
 e96:	e7 94       	ror	r14
 e98:	1a 95       	dec	r17
 e9a:	c1 f7       	brne	.-16     	; 0xe8c <__ftoa_engine+0xe6>
 e9c:	e8 e6       	ldi	r30, 0x68	; 104
 e9e:	f0 e0       	ldi	r31, 0x00	; 0
 ea0:	68 94       	set
 ea2:	15 90       	lpm	r1, Z+
 ea4:	15 91       	lpm	r17, Z+
 ea6:	35 91       	lpm	r19, Z+
 ea8:	65 91       	lpm	r22, Z+
 eaa:	95 91       	lpm	r25, Z+
 eac:	05 90       	lpm	r0, Z+
 eae:	7f e2       	ldi	r23, 0x2F	; 47
 eb0:	73 95       	inc	r23
 eb2:	e1 18       	sub	r14, r1
 eb4:	f1 0a       	sbc	r15, r17
 eb6:	43 0b       	sbc	r20, r19
 eb8:	56 0b       	sbc	r21, r22
 eba:	c9 0b       	sbc	r28, r25
 ebc:	d0 09       	sbc	r29, r0
 ebe:	c0 f7       	brcc	.-16     	; 0xeb0 <__ftoa_engine+0x10a>
 ec0:	e1 0c       	add	r14, r1
 ec2:	f1 1e       	adc	r15, r17
 ec4:	43 1f       	adc	r20, r19
 ec6:	56 1f       	adc	r21, r22
 ec8:	c9 1f       	adc	r28, r25
 eca:	d0 1d       	adc	r29, r0
 ecc:	7e f4       	brtc	.+30     	; 0xeec <__ftoa_engine+0x146>
 ece:	70 33       	cpi	r23, 0x30	; 48
 ed0:	11 f4       	brne	.+4      	; 0xed6 <__ftoa_engine+0x130>
 ed2:	8a 95       	dec	r24
 ed4:	e6 cf       	rjmp	.-52     	; 0xea2 <__ftoa_engine+0xfc>
 ed6:	e8 94       	clt
 ed8:	01 50       	subi	r16, 0x01	; 1
 eda:	30 f0       	brcs	.+12     	; 0xee8 <__ftoa_engine+0x142>
 edc:	08 0f       	add	r16, r24
 ede:	0a f4       	brpl	.+2      	; 0xee2 <__ftoa_engine+0x13c>
 ee0:	00 27       	eor	r16, r16
 ee2:	02 17       	cp	r16, r18
 ee4:	08 f4       	brcc	.+2      	; 0xee8 <__ftoa_engine+0x142>
 ee6:	20 2f       	mov	r18, r16
 ee8:	23 95       	inc	r18
 eea:	02 2f       	mov	r16, r18
 eec:	7a 33       	cpi	r23, 0x3A	; 58
 eee:	28 f0       	brcs	.+10     	; 0xefa <__ftoa_engine+0x154>
 ef0:	79 e3       	ldi	r23, 0x39	; 57
 ef2:	7d 93       	st	X+, r23
 ef4:	2a 95       	dec	r18
 ef6:	e9 f7       	brne	.-6      	; 0xef2 <__ftoa_engine+0x14c>
 ef8:	10 c0       	rjmp	.+32     	; 0xf1a <__ftoa_engine+0x174>
 efa:	7d 93       	st	X+, r23
 efc:	2a 95       	dec	r18
 efe:	89 f6       	brne	.-94     	; 0xea2 <__ftoa_engine+0xfc>
 f00:	06 94       	lsr	r0
 f02:	97 95       	ror	r25
 f04:	67 95       	ror	r22
 f06:	37 95       	ror	r19
 f08:	17 95       	ror	r17
 f0a:	17 94       	ror	r1
 f0c:	e1 18       	sub	r14, r1
 f0e:	f1 0a       	sbc	r15, r17
 f10:	43 0b       	sbc	r20, r19
 f12:	56 0b       	sbc	r21, r22
 f14:	c9 0b       	sbc	r28, r25
 f16:	d0 09       	sbc	r29, r0
 f18:	98 f0       	brcs	.+38     	; 0xf40 <__ftoa_engine+0x19a>
 f1a:	23 95       	inc	r18
 f1c:	7e 91       	ld	r23, -X
 f1e:	73 95       	inc	r23
 f20:	7a 33       	cpi	r23, 0x3A	; 58
 f22:	08 f0       	brcs	.+2      	; 0xf26 <__ftoa_engine+0x180>
 f24:	70 e3       	ldi	r23, 0x30	; 48
 f26:	7c 93       	st	X, r23
 f28:	20 13       	cpse	r18, r16
 f2a:	b8 f7       	brcc	.-18     	; 0xf1a <__ftoa_engine+0x174>
 f2c:	7e 91       	ld	r23, -X
 f2e:	70 61       	ori	r23, 0x10	; 16
 f30:	7d 93       	st	X+, r23
 f32:	30 f0       	brcs	.+12     	; 0xf40 <__ftoa_engine+0x19a>
 f34:	83 95       	inc	r24
 f36:	71 e3       	ldi	r23, 0x31	; 49
 f38:	7d 93       	st	X+, r23
 f3a:	70 e3       	ldi	r23, 0x30	; 48
 f3c:	2a 95       	dec	r18
 f3e:	e1 f7       	brne	.-8      	; 0xf38 <__ftoa_engine+0x192>
 f40:	11 24       	eor	r1, r1
 f42:	ef 90       	pop	r14
 f44:	ff 90       	pop	r15
 f46:	0f 91       	pop	r16
 f48:	1f 91       	pop	r17
 f4a:	cf 91       	pop	r28
 f4c:	df 91       	pop	r29
 f4e:	99 27       	eor	r25, r25
 f50:	87 fd       	sbrc	r24, 7
 f52:	90 95       	com	r25
 f54:	08 95       	ret

00000f56 <__prologue_saves__>:
 f56:	2f 92       	push	r2
 f58:	3f 92       	push	r3
 f5a:	4f 92       	push	r4
 f5c:	5f 92       	push	r5
 f5e:	6f 92       	push	r6
 f60:	7f 92       	push	r7
 f62:	8f 92       	push	r8
 f64:	9f 92       	push	r9
 f66:	af 92       	push	r10
 f68:	bf 92       	push	r11
 f6a:	cf 92       	push	r12
 f6c:	df 92       	push	r13
 f6e:	ef 92       	push	r14
 f70:	ff 92       	push	r15
 f72:	0f 93       	push	r16
 f74:	1f 93       	push	r17
 f76:	cf 93       	push	r28
 f78:	df 93       	push	r29
 f7a:	cd b7       	in	r28, 0x3d	; 61
 f7c:	de b7       	in	r29, 0x3e	; 62
 f7e:	ca 1b       	sub	r28, r26
 f80:	db 0b       	sbc	r29, r27
 f82:	0f b6       	in	r0, 0x3f	; 63
 f84:	f8 94       	cli
 f86:	de bf       	out	0x3e, r29	; 62
 f88:	0f be       	out	0x3f, r0	; 63
 f8a:	cd bf       	out	0x3d, r28	; 61
 f8c:	09 94       	ijmp

00000f8e <__epilogue_restores__>:
 f8e:	2a 88       	ldd	r2, Y+18	; 0x12
 f90:	39 88       	ldd	r3, Y+17	; 0x11
 f92:	48 88       	ldd	r4, Y+16	; 0x10
 f94:	5f 84       	ldd	r5, Y+15	; 0x0f
 f96:	6e 84       	ldd	r6, Y+14	; 0x0e
 f98:	7d 84       	ldd	r7, Y+13	; 0x0d
 f9a:	8c 84       	ldd	r8, Y+12	; 0x0c
 f9c:	9b 84       	ldd	r9, Y+11	; 0x0b
 f9e:	aa 84       	ldd	r10, Y+10	; 0x0a
 fa0:	b9 84       	ldd	r11, Y+9	; 0x09
 fa2:	c8 84       	ldd	r12, Y+8	; 0x08
 fa4:	df 80       	ldd	r13, Y+7	; 0x07
 fa6:	ee 80       	ldd	r14, Y+6	; 0x06
 fa8:	fd 80       	ldd	r15, Y+5	; 0x05
 faa:	0c 81       	ldd	r16, Y+4	; 0x04
 fac:	1b 81       	ldd	r17, Y+3	; 0x03
 fae:	aa 81       	ldd	r26, Y+2	; 0x02
 fb0:	b9 81       	ldd	r27, Y+1	; 0x01
 fb2:	ce 0f       	add	r28, r30
 fb4:	d1 1d       	adc	r29, r1
 fb6:	0f b6       	in	r0, 0x3f	; 63
 fb8:	f8 94       	cli
 fba:	de bf       	out	0x3e, r29	; 62
 fbc:	0f be       	out	0x3f, r0	; 63
 fbe:	cd bf       	out	0x3d, r28	; 61
 fc0:	ed 01       	movw	r28, r26
 fc2:	08 95       	ret

00000fc4 <_exit>:
 fc4:	f8 94       	cli

00000fc6 <__stop_program>:
 fc6:	ff cf       	rjmp	.-2      	; 0xfc6 <__stop_program>
